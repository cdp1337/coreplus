Core Plus 6.2.1

	* [Bug] Fix LINK orders and int checks.
	* [Bug] Fix for get() as opposed to render() in listing tables.
	* Minor fix in the Emailer for an incorrect namespace.
	* New input type; color.
	* New support for Cache::Ls()
	* Wider selection of colours in CLI.
	* Better support for URL overriding in CLI mode.
	* prevent execution of phtml/shtml within public assets directory
	* Some fixes that should address the Theme editor.
	* Minor fix for permissions formatting.
	* Skip the page tag filter if no tags present.
	* Switch default theme from base-v3 to core-2017.
	* Minor fix to correctly pull in theme names.
	-- Charlie Powell <support@corepl.us>  Fri, 02 Jun 2017 22:39:25 -0400

Core Plus 6.2.0

	* [Security] Update phpMailer to newest version upstream.
	* [Bug] Force the session to be updated when it exists on page exit.
	* [Bug] Better support for time durations > 1 minute.
	* [Bug] Fix CLI detection when the SHELL env variable is not present.
	* [Bug] Fix the issue with ajax form submissions not saving correctly.
	* [Bug] Fix in the gallery for Form namespacing.
	* [Bug] Fix resolve asset directory to not try to look for default/ anymore.
	* [Performance] Better cache for the t() function.
	* [Feature] New support for a mimetype format on Model get calls.
	* [Feature] Better responsiveness on listing "tables".
	* [Feature] More automation options for listing tables.
	* [Feature] Support for pre-rendered view controls (require fewer JS calls).
	* [Feature] /user/admin has new filter, last logged in.
	* [Feature] New "meta" model schema type; useful for defining custom functionality on models without a
	  database column associated.
	* [Feature] New support for "data-*" tags on Models, (useful for listing tables).
	* [Feature] New subsystem; \Core\Formatter.
	* [Feature] Model columns now support a "formatter" attribute to format the values from an external or
	  internal method.
	* [Feature] New support to "inline" an SVG image; the actual SVG code is entered into the markdown
	  instead of simply a link for it.
	* Upgrade SQL_Parser to newer upstream version 0.7.0
	* New method for Models, getOriginalValue()
	* More images to the stock imageset for devices.
	* /admin/log now supports new responsive table layout.
	* /admin/pages now supports new responsive table layout.
	* /user/admin now supports new responsive table layout.
	* New method FilterForm->getElements().
	* I18N support on Form->get('title').
	* New support for "source" attributes to populate "options" on form elements.
	* Drop Model::ATT_TYPE_MYSQL_TIMESTAMP; was a duplicate of ISO_8601_DATETIME.
	* Better support for CSV mimetypes.
	* New option to pull meta information from within templates.
	* Support for page edit form manipulation from within the template.
	* Better handling of long filenames; the extension is preserved.
	* Sort page templates alphabetically.
	* Themes can now extend other themes!
	* Set the relavency for pages as stars.
	* New support for administratively searching for pages with specific tags
	* New support for searching for pages with a specific tag!
	* documentation update
	* Rename "local datastore" to "local account".. more human friendly.
	* Update copyright to 2017.
	* Some I18N strings for Core.
	* These were methods, not functions...
	* Extract asset management away from the core Theme manager.
	* Better support in Core when jQuery is unavailable.
	* Migrate Theme into Core.
	* New vector logo for Core.
	* Remove some legacy code in the admin menu widget.
	* Add button groups to the test UI
	* Registration for the new Email input
	* Use the new Email input for logins
	* New form input type; email.
	* Set the upload directory to public for file upload tests.
	* Move logo images into logos/ for everything.
	* Update the phpmailer configuration to use its own page.
	* Upgrade paths from LTS 2.x to 6.2
	* More updates to the email changes across Core.
	* Latest work on the email migrations.
	* Switch Core Email to the root phpMailer backend.
	* Initial migration of phpMailer from Core to its own component.
	* Minor fix to the error management.
	* Little fixes to the widget system.
	* Some more fixes to the widget namespace transition.
	* Add support for GPG2
	* Better exception handling for invalid date strings.
	* Default update repository sites to https:// when not set.
	* Update help text with the new repo location for Core.
	* Refactor namespacing for PHPUnit so that tests at least work again.
	* Some error handling on the health check systems.
	* Some namespace fixes in the Date input field.
	* Move all component logos to assets/
	* A little less randomness on the installer...
	* Better randomness on default installations.
	* Missed an a2enmod rewrite for debian 8.
	* Provide a quick-install script for installing dependencies.
	* Helper for checking for AllowOverride None after installs.
	* Checks for mysql in the installer.
	* Better "fix" message for mod rewrite.
	* Refactor the install system to work with Core 6.2.
	* Better method of handling when PHP is not available.
	* WIP work for the log system update.
	* \Form() namespace change.
	* Refactor Forms, Markdown, AWS, and Widgets.
	* Minify some js assets.
	* Provide a failsafe for file upload options if a default is not selected.
	* Add update path from 2.6.7 to  6.2.0
	* WIP Downstream work for the 6.2.0 release.
	-- Charlie Powell <support@corepl.us>  Thu, 13 Apr 2017 19:00:53 -0400

Core Plus 6.1.1

	* Retool the datastore password mechanism a bit.
	-- Charlie Powell <support@corepl.us>  Mon, 12 Sep 2016 22:58:23 -0400

Core Plus 6.1.0

	* Smarty function 'filespeed' supports rounding now.
	* Minor fix for widgets being staticly called.
	* Email supports "on-behalf-of" (kinda).
	* Reorganize the form element ordering slightly.
	* Re-add the upgrade paths.
	-- Charlie Powell <support@corepl.us>  Sun, 11 Sep 2016 17:16:24 -0400

Core Plus 6.0.9

	* [Feature] New feature, system log configuration.
	-- Charlie Powell <support@corepl.us>  Sat, 27 Aug 2016 20:14:23 -0400

Core Plus 6.0.8

	* [Bug] Fix display templates on widgets!
	* [Bug] Fix a naming conflict when a meta attribute is the same name as a class.
	* New method to support setting the source for email logs.
	* Emails now are recorded into the system logger.
	* System log now support icon and source fields.
	* Better option values on useractivity/details.
	* Update Core Plus to 6.0.8
	* Update the upgrade path to require 6.0.7.
	* Modify admin widgets UX slightly.
	-- Charlie Powell <support@corepl.us>  Wed, 24 Aug 2016 21:49:54 -0400

Core Plus 6.0.7

	* New function in Core, mean.
	-- Charlie Powell <charlie@evalagency.com>  Thu, 18 Aug 2016 01:13:34 -0400

Core Plus 6.0.6

	* [Bug] Fix the sitemap.xml feed, (there was a minor namespace issue).
	-- Charlie Powell <charlie@evalagency.com>  Wed, 17 Aug 2016 01:14:19 -0400

Core Plus 6.0.5

	* Switch the order of URL manipulation in markdown files if there is a urlCallback provided.
	-- Charlie Powell <charlie@evalagency.com>  Wed, 17 Aug 2016 00:44:59 -0400

Core Plus 6.0.4

	* Increase the timer length to 10 seconds for GPG upload checks.
	* Do not record gpg json checks into user activity.
	* "minor text change"
	-- Charlie Powell <charlie@evalagency.com>  Tue, 16 Aug 2016 21:49:02 -0400

Core Plus 6.0.3

	* [Feature] #530
	* [Feature] User Story #1961 (Feature #1977, #1978, #1979)
	* Better future support in the update system.
	* Include the new license key for Core.
	* Post a message to refer to the more powerful GPG Key manager when available.
	* New license checks on the system health page.
	* Embed public keys in the repoXML.
	* New raw method asXML that uses the native libxml renderer.
	* Integrate support for licensed features into Core.
	* New support on GPG for Secret keys and Signatures.
	* Support POST types for remote files.
	* More support for javascript notifications from the CLI system.
	* Better UX on the system health page, (expandable divs with additional information).
	* Include licensing data on components natively.
	* Auto-import new keys on existing repositories.
	* Progress log now preserves warnings and errors.
	-- Charlie Powell <charlie@evalagency.com>  Tue, 16 Aug 2016 00:45:01 -0400

Core Plus 6.0.2

	* [Bug] Fix for WHERE clauses containing newline characters.
	* Packager fix for detecting a comment in a GIT message.
	* More icon updates throughout Core.
	* Regression fix for properly setting the referer for remote files.
	* New "Update All" functionality on the updater page.
	-- Charlie Powell <charlie@evalagency.com>  Tue, 02 Aug 2016 13:44:25 -0400

Core Plus 6.0.1

	* [Bug] Fixes for previewing images that are not inside public directories.
	* [Bug] Fix error handling when logging in with a disabled auth driver.
	* Restrict the requires directive to only components.
	* New logo for Core!
	* A test suite for the XMLLoader!
	* Comment.
	* Render page logos throughout the system when appropriate.
	* New support for logos on a per-page basis.
	* Major (regression?) fixes in the XML system to support PHP 7.
	* Support for component logos!
	* Better support for licence detection in packages.
	* Support simple and named/associative arrays for ENUM options.
	* Advanced javascript support for metadata when running CLI operations in WEB mode.
	* New license detection support.
	* Overhaul the progress log to be more user friendly.
	* Migrate i18n to YML formats.
	* Tweak the reinstall to be more javasript friendly.
	* Javsacript for the new progress frame system.
	* Minor standardizing of some of the Core javascript formats.
	* Include all the icons from the Oxygen KDE theme by default.
	* Filename fixes for resized raster images.
	-- Charlie Powell <charlie@evalagency.com>  Mon, 01 Aug 2016 00:27:03 -0400

Core Plus 6.0.0

	* [Bug] Fix options with labels defined in Models.
	* [Bug] Fix in the widgets to correctly trim '/' off template names for widgets.
	* [Bug] Fix the URL for editing page widgets.
	* [Bug] Fix for blank config options on user register and edit.
	* [Bug] Include mbstring as a pre-install check, addresses Bug #1983
	* [Bug] Fix the server ID not showing on the management page, (it included formatting which I wasn't
	  taking into consideration).
	* [Bug] Fix supplemental models not clearing the schema cache after loading new schemas.
	* [Bug] Fix VersionString to use the global C-based version_compare instead of the namespaced version,
	* [Bug] Fix a fringe bug where filenames with a dot in a parent directory were not resolving to the
	  correct extension.
	* [Performance] Add a debugging line in Configs to assist with performance tracking.
	* [Performance] Improve performance of the Search helper by not running the DoubleMetaPhone logic if
	  the string index didn't change.
	* [Feature] New feature on controls to specify only-icons.
	* [Feature] New feature to display dynamic elements on /user/me and /user/view.
	* [Feature] Most instances of user agent output I can find; Feature #1975
	* [Feature] A few tweaks to Feature #1975
	* Compiler
	* New tests.
	* Display a pretty graph on user details!
	* Slight overhaul to the Dataset to allow for more advanced operations with some backends.
	* Shortcut helpers for handlings groups on users.
	* Utilize the private IP checker for users geo data.
	* New method for detecting a changed link on a model.
	* New function to calculate internal/private IP addresses.
	* Compiler.
	* Classname fix for new font-awesome.
	* Internal fixes to strtolower all ModelSupplemental registrations.
	* Change the functionality of ajaxlinks slightly to fix a disappearing window problem.
	* Backend logic to display groups for users.
	* Minor SystemLog and View All Pages fixes
	* Move the form 'source' logic to the actual FormSelectInput.
	* Better support for SSL redirects when headers have been sent.
	* Migrate several rewrite logics from the 404 handler to the PageRequest.
	* Include the form element's parent as the column's parent.
	* Refactor the automatic upgrade process in Core.
	* Overhaul the routing and Page system a bit.
	* Include a couple internal files in the Bootstrapper.
	* Internal fix for an upgrade file to not save a user that does not exist.
	* New system, CSVImporter!
	* Migrate i18n logic from .ini to .yml.
	* New functionality on ContentCSV.
	* Internal fixes for ModelSupplemental checks.
	* User edit is now dynamic based on options set for edit/reg.
	* Add getFilename method to templates.
	* Upgrade smarty from 3.1.27 to 3.1.29.
	* Include value translation logic for Boolean schema columns.
	* CLI Progress bars now support relative values.
	* Upgrade Spyc to newest version from development.
	* More verbose email validation messages.
	* site logo on lock.message is now base64 encoded. The image file and the theme configs may not exist,
	  so, base64 zee image!
	* More overhauls to the User subsystem in Core.
	* Add support for GPG photos! Fix #101
	* Reduce the sizes of the buttons on filters by removing the word 'Filters'.
	* Allow the limit to be user changeable for FilterForms.
	* Allow system form elements to skip validation; they are set from the controller so they're expected
	  to be valid.
	* Smarty modifier for #1972.
	* New method, UserAgent->getAsHTML(); addresses User Story #1972
	* Add gpg_fingerprint as a smarty function; provides more flexibility over the in-line modifier when
	  necessary.
	* Include supplemental metadata for schemas; useful to ensure that i18n scanning propagates the
	  correct component for specific keys.
	* Styled "Core Plus is upgrading" message that displays when lock.message exists
	* Catch _tmptable existing on a prior installation run and drop it if so.
	* Wrap this in an if to alleviate strange installer issues.
	* Use extension_loaded instead of phpversion?...
	* eh?
	* Allow for blank user agent strings on the UserAgent class.
	* Skip the model supplemental class itself when pulling the list of supplemental models.
	* Better handling of the display of multisite groups.
	* Retool how user configuration options are enabled/disabled to work with 5.1.0.
	* Use the new detailed requirement checks provided by Core on the system health report instead of
	  manual checks for php extensions.
	* Move the 'asFormElement' logic from the form parent class to the individual SchemaColumn class.
	* Ensure that the UserModel returns correctly types for the various keys.
	* Disable configuration options when on children sites and that config is not set as overrideable.
	* New method to return the version of the library currently installed.
	* Expand the Component requirement check logic to include more information when requested.
	* Models no longer return true/false on set; the user password changer should return true always on
	  good passwords.
	* Remove an unnecessary functional file for Core\Configs, (all the functionality was already included
	  elsewhere).
	* Code reformat for SQL_Parser_Lexer to not throw warnings on PHP 7.0.
	* Multisite fix.
	* Include the city+state on GPG key change email notifications.
	* Display the short date+time on the log listing table.
	* Better UX assisting for configuring email sending options.
	* Improve reinstallation speeds by performing a RENAME instead of copy and fix the schema comparison
	  logic.
	* Remove datamodel backends, these have been migrated to drivers as of 2.7.0.
	* Support "t:" strings in the ViewControls system for the title attribute.
	* Add support for NTLM authentication to Exchange servers.
	* More major changes!
	* Other supplemental changes for the Model/DMI rewrite.
	* Important include changes for the new Schema system.
	* Majority of work on the model refactoring, it should work now...
	* Implement caching for the internal method SearchForString to save some lookup calls.
	* Enable Xdebug profiling when XHPROF is enabled, (but not available).
	* Standardize the time_duration_format function into one source.
	* Auto-generate the server ID on installation.
	* New support for displaying the server license key to administrators.
	* Do not enforce templates nor master templates when the View mode is set to MODE_NOOUTPUT.
	* Include the new global UUID server ID in the data along with update checks.
	* Changelog\Section methods getReleasedDateUTC, getPackagerName, getPackagerEmail, and fetchAsHTML
	* Switch the server ID to a global UUID instead of local.
	* New method to delete the private keys in a GPG keychain.
	* New support for custom request headers on remote files.
	* Increase UUID length from 21 to 32 characters to allow for global UUIDs, (not just local UUIDs).
	* Ensure that \Core\version_compare behaves similarly as the rest of the namespaced functions.
	-- Charlie Powell <charlie@evalagency.com>  Wed, 20 Jul 2016 02:05:46 -0400

Core Plus 5.0.1

	* [Bug] Fix for the broken GPG auth signature verification
	* [Bug] Better matching for version strings, (add core-specific build versions).
	* [Feature] MAJOR improvements to GPG authentication and verification!
	* New interface for pulling in default methods on the ModelSupplemental system.
	* More pretty formatted GPG fingerprints!
	-- Charlie Powell <charlie@evalagency.com>  Tue, 29 Mar 2016 17:12:29 -0400

Core Plus 5.0.0

	* [Security] Record password changes to the local security log.
	* [Bug] Fix the [TOC] markdown checker to only replace the first instance of `[TOC]`!
	* [Bug] Fix the VersionString library when comparing stability and user versions.
	* [Bug] Fix Session::Get when a subkey is requested.
	* [Bug] Fix support for querying the Session for a nested key.
	* New GPG library for handling encryption and logins; no longer relies on the gnupg_php library.
	* New i18n support across the platform, (still need to write the rest of the i18n strings and string
	  replacements).
	* New support for uploading a GPG public key instead of searching for public keyservers.
	* New support for i18n strings within the \Core\set_message system.
	* Add component names to the Config table for quick lookups on which component has which config
	  options.
	* Switch from the request header 'SERVERNAME' to 'REFERER' for standard RFC compatibility.
	* New support for email encryption natively.
	* New support for the Piwik DeviceDetector library when available.
	* Pages now support i18n strings natively.
	* Smarty {a} tags now support i18n strings.
	* Add the Spyc library for YAML file processing.
	* Add convenience defines for number of seconds in X timeframe, (1 day, 1 week, 1 month, etc).  Useful
	  for Cache systems.
	* New tests for GPG
	* New tests for UserAgents
	* Updated tests for SQL Parser.
	* Change the behaviour of control links to return the text of links when proxy is not used.
	* Translate all pages to markdown before returning the indexable string version.
	* New support for metafields in Markdown files!
	* Compiler
	* Expand the User importer to allow passing in any arbituary argument.
	* Add a UserGroup import method, similar to the User importer.
	* Initial support for supplemental models!
	* Remove the setPassword method for GPG auths backends, (the inherit nature of key-based sign ins is
	  that they don't use a password).
	* Character reorder, (no functional change).
	* Whitespace trim
	* Sanitize out non-printable characters from the SQL logger and debugger.  Also use 'INSERT IGNORE'
	  for bulk inserts to handle duplicate content.
	* Minor check for if languages provided by the system are not defined.
	* Minor fix to allow JS.Cookie not being present for the admin bar.
	* Flush the smarty cache on reinstallation, (correctly this time...)
	* Use a 't:' prefix on messages to be consistent and fix the user login redirect issue when browsing
	  to /admin.
	* Update the changelog to reflect upcoming changes.
	* MASSIVE changes in prep for the 5.0 release!
	* Move the ISO-country flags image repository in Core upstream to make it useable without the
	  GeographicCodes component.
	* Do not return an object when the assign property is used on smarty {a} blocks.
	* Whitespace removals
	* Add a new View type, View::MODE_EMAILORPRINT for print-dedicated, PDF, and email templates.
	* Extract out the encrypt and decrypt values in the Model system.
	* Add logic to support <pre> tags in the HTML to MD converter.
	* New native support for server-side JSON autocomplete resolution on input elements.
	* New md_to_html modifier for Smarty and the updated version of Michelf's Markdown Transformer.
	* New option for an entire site to be marked as not-indexable by crawlers.
	* New support for checking if a component is ready (as in configured and available).
	* Compiler.
	* Switch reinstallall to use the smarty function progress_log_iframe now that the function is
	  available.
	* Skip UserModel saving when there are no changes in either local or linked children.
	* Add support for linked records to provide a single value as the linking attribute, (when the foreign
	  and local keys are the same name).
	* Better support for expected return values from the Dataset::ExecuteAndGet method.
	* New support for setting the default skins to use throughout the site.
	* More debugging output on email tests, useful for UX developers.
	* Include numbers in search results (UserModels).
	* Do not re-encode images that have already been encoded.
	* Include numbers in search results and sort them automatically by relevency.
	* Overhaul the Email system to provide better support for HTML to Text (MD), and other tweaks.
	* Exact string searches warrant a match across all versions.
	* Skip blank words for searches.
	* New support for HTML to MD!
	* Improvements in streamlining how to use the CLI arguments a bit.
	* Add a few failsafes to UserAgent for if the upstream useragent ini file fails to load.
	* Standardize many of the theme/component reinstallation utilities and expose them as public
	  functions.
	* Remove unnecessary call to jquery.cookie on the adminmenu page.
	* Include an upgrade path for 3.5.1
	* Add support for ~bpo version detection and packager versions.
	* Minify core.strings, (must have forgotten to do this before).
	* Set version freeze to 0 by default.  This is an enterprise feature that's not useful for standard
	  community sites.
	-- Charlie Powell <charlie@evalagency.com>  Wed, 23 Mar 2016 21:59:46 -0400

Core Plus 4.2.0

	* [Security] FIX strip out HTML characters from the URL when rendering the Javascript helper object.
	* [Bug] Fix the call for License factories on the FileMetaHelper class.
	* [Bug] Support displayformat and saveformat for DateInputs.
	* [Bug] Add another primary key to UserActivity, now that session IDs are generally blank for
	  anonymous users.
	* [Bug] Remove styles from inline, they prevent the custom override from taking effect.
	* [Bug] The Factory namespace was being cross-used by other methods.  Take out the use directive to
	  allow both Factories to run in the same script.
	* [Bug] Fix the password reset link not displaying.
	* [Bug] Some minor cleanups on the user login pages.
	* [Bug] Fix smarty suppressed warning when the smarty file doesn't exist yet.
	* [Bug] Fix form element IDs rendering with a "/" in the ID.
	* [Bug] Allow getWidgetAreas to be called on a file that doesn't exist, (happens from time to time).
	* [Feature] Provide better support for URL_WEB validation where the user doesn't enter the http://
	  prefix.  Addresses Feature #1413
	* [Feature] New feature for removing stop words from URLs, addresses Feature #1072
	* [Feature] Add support for pages on user activity details, addresses Feature #1515
	* [Feature] Add IP filter support to the system log, addresses Feature #1433
	* [Feature] Move systemlog to reporting, addressed Feature #1514
	* [Feature] Try to use the web's TMP directory so that utilities/reinstall can accurately purge the
	  site cache.
	* [Feature] More verbose output options for upgrades.
	* [Feature] Add CLI::PrintDebug method as another output option.
	* [Feature] Add support for nested Views.
	* [Feature] Add support for specifc Views on templates.
	* [Feature] Include content-disposition for file downloads and return images as-is for non-resized
	  images.
	* [Feature] Upgrade smarty to 3.1.27
	* [Feature] Switch system log to use the filters and add an email config/test system.
	* [Feature] Add support for sub-where clauses in Filters.
	* [Feature] Include print and blank as Core-level skins as they are now used across all themes.
	* [Feature] Add custom print styles for overriding print-only styles from the theme editor!
	* [Feature] Switch file uploads to use the data prefix for custom attributes and add support for
	  recognizing the basedir when browsing files inline.
	* [Feature] Simple smarty modifier, "to_url".
	* [Feature] Add support for inline base64 encoded images via the {img} smarty tag.
	* [Feature] #1074 New support for theme-based configuration options and all the supplemental code for
	  them!
	* [Feature] Add User Agent into the admin user view page and better support for viewing specific users
	  on the log.
	* [Feature] #556 Add support for tracking site search in Piwik!
	* [Feature] Add support for passing the query for search results, (required for analytical tracking
	  support).
	* Standardize some namespace functions and migrate all SESSION operations to \Core\Session.
	* Ensure that the model name is set appropriately!  (Forgot this from a prior commit.)
	* "Return" instead of go back two spaces for system configuration submissions.
	* Call getAsFormElement instead of the shortcut version, (seeing as this is a shortcut function as it
	  is).
	* Correctly pass a fully resolved / external baseurl on the sitemap.
	* Correctly pass a fully resolved / external baseurl on the PageModel.
	-- Charlie Powell <charlie@evalagency.com>  Thu, 08 Oct 2015 23:34:53 -0400

Core Plus 4.1.2

	* [Bug] Add the patch for <4.1.2 code bases being able to pull a filename without relying on
	  Content-Disposition.
	* [Bug] Various fixes in the UserAgent detection for unknown devices.
	* [Bug] Drop the path prefix from package locations.
	* [Feature] Add support for content-disposition headers on remote files when determining the filename.
	* Test case maintenance.
	-- Charlie Powell <charlie@evalagency.com>  Fri, 21 Aug 2015 14:58:24 -0400

Core Plus 4.1.1

	* [Bug] Sanitize out HTML from the query string when sending to debug output.
	* [Bug] Fix page template selection form retrieval and add support for inactive users in the User
	  input element.
	* [Bug] Fix a variable renaming from jslibraries to scriptlibraries, (not sure how this didn't happen
	  before).
	* [Bug] Listing table column selection display fixes.
	* [Feature] Add markdown support for insertables.
	* [Feature] Add the available libraries to {script library="..."} tags for developers.
	* [Feature] Allow Models to be passed in to addControl and addControls methods.
	* Add nextYear and prevYear to the DateTime object, (convenience methods).
	* Allow the form parameter to be optional in add_form_element.
	* Add Core::GetClasses method, useful in some fringe cases.
	-- Charlie Powell <charlie@evalagency.com>  Thu, 20 Aug 2015 16:36:06 -0400

Core Plus 4.1.0

	* [Security] New Content Security Policy header system config option
	* [Bug] Do not display the table header for listing tables if there are no entries!
	* [Bug] Do not try to process JPEG thumbnails when exif_thumbnail doesn't exist.
	* [Bug] Limit file upload names to 40 characters.
	* [Bug] Add support for mobile browsers on the context menus.
	* [Bug] Fix for invalid widgets from the createwidget metadata.
	* [Bug] Fixes to the updater, (a GET parameter is better to use than the URL).
	* [Bug] Fixes to the updater.
	* [Bug] Fix issue #1273 Make non-existent widgets a little more forgiving, (no longer throw exceptions
	  when trying to load a non-existent widget).
	* [Bug] Fix issue #1118 - Add a new Validation exception for data entry errors that aren't thrown by
	  the Model, but should still behave similarly.
	* [Feature] Allow for "inline" CSS includes.
	* [Feature] Rudementary support for the API key to be used for authenticating the user, (WIP)
	* [Feature] Include MarkDown to HTML converter in Core.
	* [Feature] More browsers supported for regex/str detection for if file detection fails.
	* [Feature] New feature - spinning icons on the control cog.
	* Trivial namespace change.
	* Hand off more logic to phpMailer, (now that it is more functional in regards to HTML messages).
	* Add getDirectoryName to the official FileInterface.
	* New method, CLI::PrintProgressBar!
	* Make the color messages monospace.
	* Allow Models to have translateKey called without saving the underlying model in case of linked
	  Models as the value.
	* Add support for FGL text.
	* Todo #1305 Switch from /user/view/# to /usermodel for the Control Links hook.
	* Add support for a fringe case when an entire Model is set as a value of another Model.
	* Minor javascript cleanup and add onChange event propagation for userInputs.
	* Move support for dispatching control links on a specific Model up one level from the smarty function
	  to the ViewControls object.
	* Documentation fix.
	* Switch dataprofiler to save to Session so that queries on POST/redirect pages can still be viewed.
	* Links should default not to have confirm text, (so that they send GET requests instead of POST).
	* Shorthand for selecting a single record via executeAndGet.
	* Capitalization error with the context controls.
	* Allow a full email address to be used for the user input.
	* Switch the data: prefixed attributes to valid data attributes for {a} tags.
	* Increase the precision of the user activity to allow more than one request per second per user.
	* New DataProfiler to centralize profiling datasources and queries.
	* Allow the proxy to be set as not used via "data-proxy-force=0" (or proxy-force when using
	  {controls}.
	* Add "function" as a requirement option for component <require> flags.
	* Remove the force session save logic.
	* New configuration option, DMI_QUERY_LOG_TIMEOUT, essentially slow_sql_log.
	* Require the new dataprofiler on ClI reinstallations.
	* Update the copyright to 2015 and my email address throughout the project.
	* New widget previews for the widget manager.
	* Sort components by name on the All Pages filter.
	* Core now includes JSON-JS as an embedded library.
	* Utilize embedded JPEG thumbnails when resizing an image to thumbnail-sizes.
	* Re issue #1267 Remove the duplicate template element from the widget edit page, this was meant to
	  reside only on the instance options page. @.25
	* Purge some legacy files in Core that aren't used anymore.
	* Cleanup the spin option on ul.controls a bit - proxy-icon-animation.
	* Add the widget settings link on widget instances, it only makes sense to be able to edit them from
	  the installed point too.
	* Heavy reworking of the widget system to support widget previews and alternative display templates.
	* Allow source to contain "this::" when passed in from a valid Model.
	* Remove some legacy files.
	* "Alternate" does not mean the same as "Alternative".
	* Move some of the icon logic from View to ViewControl.
	* Support control links on an entire listing table.
	* fancy animations for controls icons and CSP header
	-- Charlie Powell <charlie@evalagency.com>  Thu, 06 Aug 2015 17:38:08 -0400

Core Plus 4.0.8

	* Include JSON2 for IE8 and lower.
	* Upgrade html5shiv to the latest upstream version.
	-- Charlie Powell <charlie@evalagency.com>  Thu, 30 Apr 2015 23:08:07 -0400

Core Plus 4.0.7

	* [Security] chmod a-x on a few files
	* [Bug] Do not override a config value if it's set to "0".
	* [Bug] More code styling fixes.
	* [Bug] Flip the order of delete/save linked model saving.
	* [Bug] Support ALIAS column types in the form builder, (or rather ignore them as appropriately).
	* [Bug] Fix a major bug with ALIAS columns where the old column was not being renamed to the new alias
	  as expected during upgrades.
	* [Bug] Fix the width/height property when handling fill-area images.
	* [Bug] Do not restrict the page to be an exact match when looking up page models.
	* [Bug] Fix issue with reverse fuzzy URL lookups returning the baseurl instead of the rewrite url.
	* [Bug] Fix memcache as a cache backend option.
	* [Bug] Include showminute for DateTime pickers.
	* [Bug] Allow text as a configuration type, (since it *is* now an allowed configuration type).
	* Minor code cleanups and removing some legacy code.
	* Minor javascript code style cleanups and add some minified versions of Core javascript files.
	* New documentation and tests for ensuring the image resizing subsystem works as expected.
	-- Charlie Powell <charlie@evalagency.com>  Thu, 30 Apr 2015 11:15:31 -0400

Core Plus 4.0.6

	* [Bug] Add extra spacing to some regex checks when searching through code for class names.
	* [Bug] Fix Additional check for Core::Redirect('/') when there is no registered home page.
	* [Bug] Facebook recommends larger images for their og:image tag, increase the size to 1500x1500.
	  (#1027)
	* [Feature] Allow auto-increment IDs to be set on new Models.
	* [Feature] New static method, Model::GetAllAsOptions.
	* [Feature] New shortcut methods, DateTime->nextMonth() and DateTime->prevMonth().
	-- Charlie Powell <charlie@evalagency.com>  Fri, 03 Apr 2015 17:22:12 -0400

Core Plus 4.0.5

	* [Bug] GPG key lookup was returning the first 8 characters in the pub:keystring instead of the last 8
	  characters, which is the actual requested key.
	* [Bug] Minor fix on CLI::PrintHeader for when the line is longer than the maximum allowed length.
	* [Performance] Found a better way to supress DOM errors...that doesn't actually try to write to the
	  query log. As a result, I shaved off 10ms from each page render.
	* [Feature] New smarty function for rendering a logging iframe, useful on reinstallation scripts,
	  import scripts, and the like.
	* [Feature] Added in missing clearfix selector includes. This fixes  /theme tutorial display quirks
	  when 3 themes are installed.
	* [Feature] Core requires 256MB of memory, check this on the installer
	* [Feature] Core requires BC Math in PHP, check this in the installer
	* [Feature] Config options should support type="text"
	* [Feature] Allow setting the sort direction for FilterForms with "asc" and "desc" too.
	* [Feature] Handle setting a linked Model directly via set().
	-- Charlie Powell <charlie@eval.bz>  Wed, 11 Mar 2015 15:34:42 -0400

Core Plus 4.0.4

	* [Bug] Update the packager so that all components and themes correctly display when they need to be
	  packaged up.
	* [Bug] Fix the SUDO admin menu group to work with new versions of Core.
	* [Feature] Group user and user group admins pages under the new 'User' group.
	* [Feature] Group pages that share the same title as the group to remove duplicate links in the admin
	  menu.
	* Several minor, (albeit essential), fixes for the saving of user config options.
	-- Charlie Powell <charlie@eval.bz>  Thu, 22 Jan 2015 00:35:37 -0500

Core Plus 4.0.3

	* Add number of rows into the query log debug section.
	-- Charlie Powell <charlie@eval.bz>  Wed, 21 Jan 2015 00:03:34 -0500

Core Plus 4.0.2

	-- Charlie Powell <charlie@eval.bz>  Tue, 20 Jan 2015 23:26:35 -0500

Core Plus 4.0.1

	* New ModelImport subsystems available for use, (scaffolding at least).
	* Allow a "source" to be specified for select options.
	* Allow the packager to re-run on a released version and fix the weird issue with Core's XML metafile
	  not being included :/
	* Include "application/pgp" as a GPG/PGP signature mimetype.
	* Handle 301 redirects identically as 302 redirects.
	-- Charlie Powell <charlie@eval.bz>  Tue, 20 Jan 2015 15:02:49 -0500

Core Plus 4.0.0

	* [Bug] Switch the View debugging information to use the standard UI structure for collapsible
	  fieldsets as of base-v3.
	* [Bug] Do not try to pull widgets on a per-page basis when there is no valid page.
	* [Bug] fix - Core now handles the GET parameters internally in PageModel::SPlitBaseURL if applicable.
	* [Bug] Check if the verification for a UserConfiguration option is valid before blindly executing it.
	* [Performance] Optimize the indexes of PageModel for performance.
	* [Performance] A few more unsets in the bootstrap to try to keep the memory footprint at a minimum.
	* [Feature] Retool how widgets areas work to allow page-level templates to be specified and managed.
	* [Feature] Rework how icons on the User/connectedprofiles page appear and function to make them more
	  user-friendly.
	* [Feature] Allow twitter-style '@' links on profiles.
	* [Feature] New collapsible fieldset legend support with chevron hints.
	* [Feature] New method, FilterForm->hasFilters(); returns if the filter set has any filters available.
	* [Feature] Reduce how many page jump links are displayed when there are > 1000 pages to improve
	  readability of the listing.
	* [Feature] Added password protection ability on a per-page basis.
	* [Feature] A couple more fixes to #7, among the previous commits.
	* [Feature] Implement #727, the physical button for reinstallations.
	* [Feature] Edit repository functionality and additional stats on remote repos on the updater system.
	* [Feature] Trim the password automatically for the UpdateSiteModel, copy/paste will often contain
	  whitespace.
	* [Feature] Add all RFC7231 client error codes into Core.
	* [Feature] Better check in the updater if a remote file is OK and/or requires authentication.
	* [Feature] New method for remote files, requiresAuthentication.
	* [Feature] Add support for sorting on the DirectoryIterator system.
	* [Feature] Do not return any filter HTML if no filters are present on a given listing table.
	* [Feature] New support for generating a password for a user when creating users administratively.
	* Add "Normal" color, useful for CLI writing as HTML, (COLOR_RESET has </span>, so it needed something
	  to start that).
	* Add readonly as a valid text input parameter.
	* Allow the primary key to be a single value, (for shorthand), and display more verbose errors when
	  error submissions fail on DEVELOPMENT sites.
	* Expand CLI::Print* methods to support arrays across the board,
	* Set base-v3 as the default theme for new installs.
	* Parse GET parameters correctly when performing a SplitURL check.
	* Was checking the incorrect criteria; should skip filter rendering if there are no filters, not if
	  there are no filters set.
	* Reorganize PageModel::SplitBaseURL to better support extensions, query strings, and aliased URLs and
	  remove functionality from CurrentPage and PageRequest, since that logic was duplicated in PageModel.
	* Documentation tweak.
	* GZ files can be either application/x-gzip or application/gzip...
	* Upgrade icheck to latest upstream version, 2.0.0, (requires changing "iCheck" to "icheck").
	* Refactor how Model links are handled internally to allow for multiple child Model objects that share
	  the same type but different keys.
	* New tests for a few Core systems.
	* Migrate all of the available logic out of the Packager utility script and into a new class.
	* Documentation and new methods, Parser::changed() and Section::markReleased().
	* Test file for DirectoryIterator
	* The form on updater/repos/add will not display when an error is present.
	* Remove blank <smartyplugins/> tags when saving a component.xml file.
	* New filestore class, DirectoryIterator.
	* Remove unsupported "ignores" directive in DirectoryLocal, (this was a fragment from Core v1.x).
	* Provide more documentation for CLI\Arguments and general code cleanups.
	* New options for generated CLI menus, "q" and "m" & support array of lines for PrintLine
	* Print useful debug messages when viewing updater/repo/add without having a gnupg directory setup.
	-- Charlie Powell <charlie@eval.bz>  Thu, 08 Jan 2015 00:08:44 -0500

Core Plus 3.5.0

	* [Security] Replace the html2text version included with phpMailer with a more secure, more updated
	  version by mtibben.
	* [Bug] Fix for fringe case on linked model records.
	* [Bug] Fix the order of strpos for other filetypes in getFilename(false).
	* [Bug] Fix the message icons to match new FontAwesome names.
	* [Bug] Pass the originally requested timezone into DateTime->format.
	* [Bug] Fix the issue where empty date/time inputs were defaulting to NOW().
	* [Bug] Fix the include order of the user login javascripts.
	* [Bug] Fix the time at when the resized image file is created in the logic.
	* [Bug] Fix spaces being added to filenames for non-clobbing behaviour.
	* [Bug] Fix automatic int validation for models when the value was a float type, but did not contain
	  any precision.
	* [Bug] fix, the site key needs to be a SITE type, not INT.
	* [Bug] Fix for legacy data, namely the page_template key.
	* [Bug] Allow the server ROOTURL to be spoofed via the command line, (required for some tests).
	* [Bug] Use requested parameters and allow for 2-character file extensions, ("js").
	* [Bug] Trim configuration values from XML files.
	* [Bug] Compare modified time AND filesize for the quick identicalTo test for local files.
	* [Bug] Update tests to work with new version of phpunit.
	* [Bug] ".js" needs to be trimmed off minified javascript filenames, (so that .min.js can be
	  appended).
	* [Bug] Remove duplicate page breadcrumbs.
	* [Bug] Remove underscores "_" on automatic form titles from Model schemas.
	* [Bug] Revert the wide-scale strtolower on URLs to prevent URLs with query strings from being
	  lowercased.
	* [Bug] All image resizes should be performed within public/tmp.
	* [Bug] Move jquery.icheck outside of the foot script for form checkbox inputs.
	* [Bug] Do not render a blank value for page images, results in a broken image.
	* [Bug] Allow link parameters to have an extension on them, such as /something/view/1.png
	* [Bug] Forgot to update a variable on the smarty {a} block.
	* [Bug] Do not return a valid offset if the ViewMeta's value has not been set.
	* [Bug] Add a couple upgrade paths from new backports of 2.6.x.
	* [Bug] Do not cache pages that have a form rendered on them.
	* [Bug] Multisite fixes on the sitemap page.
	* [Bug] New configuration option to disable the anonymous user page cache.
	* [Bug] Delete parent Model objects before the extending child is deleted.
	* [Bug] Skip the sitemap listing itself on page search.
	* [Feature] New version of Html2Text from https://github.com/mtibben/html2text
	* [Feature] Include a new constant REMOTE_POSTAL in the bootstrap system.
	* [Feature] Include a message if a listing table is rendered and no records present saying "No records
	  found" instead of an awkwardly empty table.
	* [Feature] New method, ViewControls->hasLinks().
	* [Feature] Add a few more elements to the test UI page.
	* [Feature] Add assign to {widgetarea} and do not render anything if no widgets are present.
	* [Feature] New shortcut function, DateTime->getDayOfWeek.
	* [Feature] Allow for labelled options on enum definitions.
	* [Feature] Try to resolve the link name when setLink is called.
	* [Feature] Allow render() to be called with any named element in the form.
	* [Feature] Add default sort and CSV capabilities into the listing table system.
	* [Feature] Trim off "(" and ")" from WHERE IN statements.
	* [Feature] Add allowance for Datasets to be constructed without a select statement, (even though that
	  is technically required).
	* [Feature] Major documentation work on the smarty plugins.
	* [Feature] New method available for controllers, sendJSONError.
	* [Feature] Automatic trimming or removal of the "Model" suffix on link names when executing
	  getLink().
	* [Feature] Add support for "data-" attributes on form inputs.
	* [Feature] Add support for nested 302 redirects for remote files.
	* [Feature] New method for datasets, executeAndGet.
	* [Feature] New support for optgroups on select inputs.
	* [Feature] New form input type, "button"
	* [Feature] Expand the number of page-* classes appended onto the body to include the complete baseurl
	  structure.
	* [Feature] Allow extensions to be determined by the mimetype for resizing images.
	* [Feature] Add published expiration dates to all Pages.
	* [Feature] Add Model::VALIDATION_NUMBER_WHOLE and Model::VALIDATION_CURRENCY_USD regex strings for
	  models.
	* [Feature] Upgrade less to newest released version.
	* [Feature] Display pagination options even if there is only one page.
	* [Feature] Simple check Core::CheckIntGT0Validity for use on Model validation.
	* Add a couple more common default browsers into the UserAgent system.
	* Line ending correction.
	* Migrate Core::ResolveAsset to the namespaced function.
	* Textual changes to some password related notices.
	* Do not try to connect to an FTP server if no username is defined.  (Prevents warnings in the error
	  log.)
	* Minor cleanup of the output for admin reinstall.
	* Page published_expires had a value set on form submission because MySQL *always* parses int fields
	  to 0 if null or empty is sent...regardless if the field allows null.
	* Skip xhprof includes in the compiler.
	* Pass template exceptions to the system error management.
	* Try to trim off the ROOT_PDIR when not requested and "other" is the file type.
	* Add support for XHprof profiling.
	* CLI and installation work.
	* Add "isLocal" method to all File backends.
	* Flip the order of strtolower in the URL resolution.
	* Allow remote {img} requests to be passed through straight to the UA.
	* Respect page published statuses on the sitemap generation.
	* Some improvements for standalone inclusion of the CLI utilities.
	* Add/standardize some supplemental javascript files for the various authentication sources.
	* Additional sanity logic if the remote IP does not resolve to a valid province.
	* Better handle the redirect URL for user logins and registrations.
	* Use a 301 status code (permanent instead of temporary), for site-url redirects.
	* Trim off any trailing slash on page URLs in the PageRequest.
	* Some default model validation options for INTs.
	* Contextual control positioning options and off-page fix.
	* Allow empty confirm text to be set on links to allow for an empty POST request.
	* CSS Source map addition.
	* Styling for contextual controls embedded in the admin bar.
	* Need to assign the multisite option onto the /admin/pages template.
	* Hide the unusable links in the pagination and always show number of results.
	-- Charlie Powell <charlie@eval.bz>  Mon, 24 Nov 2014 22:57:22 -0500

Core Plus 3.4.0

	* [Security] New restrictive .htaccess files for files/private and files/public.
	* [Bug] Fix a bug with default values for models and add the ability to query a specific key to see if
	  it has been changed.
	* [Bug] Fix the mysql 5.6 issue where ints cannot contain a default value.
	* [Bug] Fix the mysql 5.6 issue where BLOB/TEXT cannot contain a default value.
	* [Bug] Fix the model schema issues with aliases and indexes on reinstallation.
	* [Bug] Fix rendering of images when public/tmp isn't writable, (prevents a loop issue).
	* [Bug] Rewrite the controls logic to behave better with overflow:hidden.
	* [Bug] Target the select container on readonly selects instead of the specific input.
	* [Bug] Ensure that link resolution is handled in all lowercase.
	* [Bug] Do not perform any URL redirects when running in CLI mode.
	* [Bug] UI Bug - width on the widgets listing table was incorrect.
	* [Bug] Minor tweak to prevent the editor from giving an undeclared variable notice.
	* [Bug] User IDs are UUIDs instead of INTs.
	* [Feature] Consolidate some admin config logic and add performance options.
	* [Feature] form edit quick thingy, yay!
	* [Feature] Support for the proxy-friendly asset versioning.
	* [Feature] Install the asset htaccess automatically on reinstall.
	* [Feature] Add support for titles being defined in the component xml for configuration options.
	* [Feature] Allow shorthand calling of the smarty function {asset}.
	* [Feature] Add the extension of the file requested onto PageRequest.
	* [Feature] Add the new Model methods to the create component scaffolding and some documentation.
	* [Feature] New API feature for Models, getControlLinks.
	* [Feature] Automatic hook registration for every model's Control Links.
	* [Feature] New method, getModelList on the components.
	* [Feature] Support global widgets
	* [Feature] Add support for ssl="auto" or ssl="1" in the smarty {link} function.
	* [Feature] Add support for inherited Models and documentation tweaks.
	* [Feature] Allow a Factory to be set on the Listing Table in addition to just its name.
	* [Feature] Add the public method _rawExecute to Core\DataModel\BackendInterface.
	* [Feature] Implement VersionString to centralize that functionality.
	* [Feature] More Documentation!
	* [Feature] Collapsible fieldsets with an ID now preserve state across page loads.
	* [Feature] Listing tables now have selectable columns.
	* [Feature] New SEO customization options for Core.
	* [Feature] Allow the getTeaser to always return content, even if no teaser was set.
	* Rename asFormElement to getAsFormElement for the ConfigModel.
	* Move the getAsFormElement logic for Configuration options into the ConfigModel.
	* Remove the {permission} smarty function.
	* Switch "-1" to "_GLOBAL_" when dealing with global pages internally.
	* Tweak the unique hash generator for forms to include (again), model primary keys.
	* Some multisite tweaks in the admin controller and templates.
	* Only expand the specific record when clicking on the edit link on a given record.
	* Some options for contextual controls.
	* Some additions for the site in multi-site logic.
	* Set a couple defaults on the user model.
	* Fee Fi Fo Fum, I fixed me a page popularity score...or watched, at least
	* Need to sort the *children* array instead of the parent array for the admin navigation.
	* Auto-select the first input, (if found), when clicking on an inline edit link in the listing table.
	* Move the stop word list into a Core function so that other utilities can easily utilize it as well.
	* Set the profile links to target=_blank.
	* Add IDs to the debug-sections, (used in javascript now).
	* Migrate the connected profiles from User-Social to User proper.
	* New form element, user.
	* Re-add the email smarty function and corresponding javascript for it.
	* Add last updated and source component to the list of columns selectable on /admin/pages.
	* Set the page description length to 150 characters.
	* Rename "Administration" to "Admin Dashboard".
	* Tweak the admin menu to allow top-level groups to have links.
	* New shortcut method for the Form system, getElementValue.
	* Allow placeholder on text-based form elements.
	-- Charlie Powell <charlie@eval.bz>  Wed, 28 May 2014 19:37:26 -0400

Core Plus 3.2.2

	* Some fixes in the PageRequest now that invalid views can be continued through the system a little
	  longer.
	* Widgetareas are singleton tags, there is no closing tag associated to them.
	-- Charlie Powell <charlie@eval.bz>  Wed, 02 Apr 2014 22:11:25 -0400

Core Plus 3.2.1

	* Change the UA download source, yet again!
	* Move some documentation out of Core's src directory.
	-- Charlie Powell <charlie@eval.bz>  Wed, 02 Apr 2014 04:52:51 -0400

Core Plus 3.2.0

	* [Security] Display login attempts and other security notices for users when viewing their profile.
	* [Bug] User IDs are UUID, not INTs.
	* [Bug] Minor fix to ensure that 403 errors from admin pages still render the skin.
	* [Bug] Skip alias renaming if it already exists.
	* [Bug] Browscap changed their download URL.......
	* [Bug] 403 should not display the "register" form, as that is no longer sufficient for a user
	  registration.
	* [Bug] Only apply the groups on the current site when running checkAccess.
	* [Bug] Of course password-based accounts can set their password :P
	* [Bug] A few fixes for 404 pages and invalid themes.
	* [Feature] New image resizing systems, these now produce smaller files and retain GIF animations
	  whenever possible!
	* [Feature] Ensure that all images have alt text.
	* [Feature] New hooks and better widget support for pages.
	* [Feature] New support for a site skin config option for user functions.
	* [Feature] Better support for i18n and l10n.
	* [Feature] New smarty function, {access}.  This limits access to a given subset of the template to
	  only specific users based on their access string.
	* [Feature] New function to find config options based on a keyname.
	* [Feature] The startings of i18n support!
	* [Feature] Allow multiple short-hand arguments in Smarty functions.
	* "Skin" is more accurate and less ambiguous than "template", so that is used on the WidgetInstance
	  model; also widgets are now linked on the actual baseurl and not the page template.
	* Widen up /admin/widgets a bit.
	* Allow the smarty {date} function to use the "assign" parameter.
	* Display a message to the user when a form submission hits an Exception, even when in production
	  mode.
	* Also include other variations of the "next" for component upgrades.
	-- Charlie Powell <charlie@eval.bz>  Wed, 02 Apr 2014 03:33:10 -0400

Core Plus 3.1.0

	* [Security] Switch from the SecurityLog to the SystemLog.
	* [Bug] Fix horizontal form description position
	* [Bug] Fix the filters form, add a hidden submit button so [enter] works on filters.
	* [Bug] Fix the DateTime relative formatting, although we still need a proper locale system.
	* [Bug] Fix Set data to at least a blank array on Dataset::execute.
	* [Bug] Fix a minor typo on the Smarty getInsertable method.  "option" should have been "options".
	* [Bug] Fix for MySQL 5.5.35 Default flag.
	* [Bug] Fix the memcache tests, (was using an incorrect URL).
	* [Bug] Fix the lookup the user's AuthDriver appropriately.
	* [Bug] Fix the ModelSchema supports precision again.
	* [Bug] Set submit buttons to have a name of "submit" by default if none provided.
	* [Bug] Skip "." and ".." when purging file caches.
	* [Bug] Some fixes for the udpater on installing components.
	* [Bug] Rewrite the Caching backend on Core to better support what it needs to, (expire times).
	* [Bug] PageModel "site" type needs to be a SITE instead of INT.
	* [Bug] Only reset _data on Datasets when the query is a GET query.
	* [Bug] Use the namespaced version of resolve_link instead.
	* [Bug] Do not overwrite the access string if none is provided from component.xml files.
	* [Bug] Ensure that the View does not try to send headers if they have already been sent to the
	  browser.
	* [Bug] Add support for controllers with an index method to be called with a file extension.
	* [Bug] Ensure that Core\compare_values only runs strlen on strings.
	* [Bug] Was missing a space in the file upload template.
	* [Performance] Do not record the full backtrace when executing a query if no need to, this is a
	  rather expensive operation performance-wise.
	* [Performance] View saves its body content locally for multiple calls to fetchBody().
	* [Feature] Security logging tweak.
	* [Feature] Models can now extend other Models!
	* [Feature] Ability to disable emails and provide a sandbox destination globally, ref #544.
	* [Feature] Grab the "next" upgrades automatically when setting the next version of a component.
	* [Feature] User accounts can now be deactivated, which behaves differently than not-yet active users.
	* [Feature] New support for authentication icons.
	* [Feature] A quick-search option on /admin/config.
	* [Feature] New support for handling GPG keys in Core.
	* [Feature] New interface to manage user authentication drivers, now that more are supported.
	* [Feature] Enable GPG authentication and rework the user system a bit.
	* [Feature] Non-indexable pages need to set their noindex meta attribute automatically.
	* [Feature] New site search pages and widgets, (also migrate the sitemap into Core).
	* [Feature] Better handle scaling images up to fit a minimum width/height.
	* [Feature] Widget instances can now be managed via /admin/widgets!
	* [Feature] Add Template->getWidgetAreas to return an array of all the available widget areas on a
	  given template.
	* [Feature] Skip incrementing the page view if the current user is detected as a bot.
	* [Feature] Add body and search indexes to PageModels.
	* [Feature] Migrate much of the request logic into PageRequest from index.
	* [Feature] Add PageModel::getAuthor to return the UserModel from the metadata of the page.
	* [Feature] New page, test general UI controls.
	* [Feature] Add "getWord" to bacon ipsum.
	* [Feature] New systems, /admin/pages and /admin/widgets
	* [Feature] Add the WidgetInstance link and editurl to Widgets.
	* [Feature] New support for PageModel editurl, deleteurl, images, and popularity scores.
	* [Feature] Allow for short-hand {link} usage in smarty.
	* [Feature] New support for simple widgets and settings data in widgets.
	* [Feature] New image meta tag, sets the og:image meta.
	* [Feature] New referrer tracking and better exit status handling in Form systems.
	* [Feature] Components can run the "next" upgrade.
	* [Feature] Fancy checkboxes and radios. Fully accessible and degrades nicely
	* [Feature] Slide animation tweak for debug section
	* [Feature] Add the generic __toString method for Models.
	* [Feature] Add total record count and current view count to the pagination bar.
	* [Feature] Add DateTime::FormatString for a shortcut method.
	* [Feature] Cleanup the getClass method of Forms and also add support for form orientations.
	* [Feature] New view for frontend developers, Form/TestUI.
	* [Feature] Extension on the UserAuth API, renderLogin; add the ability to change Form options on
	  execution of the method.
	* [Feature] Automatic pagination jump points.
	* [Feature] Dataset supports bulk inserts.
	* [Feature] Remove underscores from config options when displaying them in forms.
	* [Feature] Clean up the formatting of Core\Utilities\Profiler\getTimeFormatted.
	* [Feature] Allow multisite sites to be passed into the URL resolution system of Core.
	* [Feature] Add a Model->getAsJSON() method.
	* [Feature] New Core\Date namespace for useful Date and Time systems.
	* [Feature] Support alias columns on table creation as well.
	* [Feature] The smarty {date} function now supports short-hand calling.
	* [Feature] Record which version was upgraded during automatic upgrades.
	* [Feature] New method on the AuthDriverInterface, getAuthTitle.
	* [Feature] New function, Core\ErrorManagement\exception_handler.
	* Prevent /admin/config from being collapsed.
	* tweaked fancy form element styles a bit
	* User forgot password needs to use the correct log backend.
	* Update /admin/page to display seconds as "sec" instead of the full word, saves some horizontal
	  space.
	* Need to be more specific on the Cache system for class exist checks.
	* feaure Add a column "indexable" onto pages.
	* Move Core::ResolveLink to \Core\resolve_link.
	* Add a few more profiling points in Core.
	* Switch the smarty date function to use a constant instead of the string.
	* minimalect shouldn't hide the default option on selects
	* Form element background tweak for option groups (checkboxes or radio)
	* Extend the built-in list of file extension and mimetypes to inlcude image/*.
	* A little more intelligent check for a given local file and it being writable.
	* Migrate the user styles into the theme, now that User is an integrated part of Core.
	* Completely overhaul the form styling and templates on Core.
	* Model clean ups, including better link name handling, not encrypting empty values, and setting TEXT
	  types to an empty string default value.
	* Better handle automatic timezones when performing date/time manipulation.
	* A default of "Current Site" and not "Root Site" is needed on the Core::ResolveLink method.
	* Use the new Core\Date namespace in the smarty {date} function.
	* Allow blank.tpl as an allowed skin in the PageRequest.
	* Be a little more exact with the addition of a class_exists check.
	* A few tweaks to the user metadata in the core component.xml.
	* Ensure that accessing a ViewMeta object as a string will return a string.
	* More accurate checking for taken page urls when in multisite mode.
	* Support for less-persistent forms.
	* Add the query into the log for DMI_Query_Exceptions.
	* Use the new exception_handler for exceptions instead of simply error_logging the message.
	* Update the phpdoc @package for Core.
	* Use the exception handler instead of transposing View Exceptions and Template Exceptions to a
	  standard error.
	* DatasetWhere statements support sending 'NULL' as a string in where clauses.
	* Skip alias columns when creating tables if the column did not exist prior.
	* The system was complaining about 'Model' as a class, so switched to the more specific UserGroupModel
	  instead.
	* Documentation change, @copyright.
	* Models support column aliases.
	* Test for FileLocal -> sendToUserAgent().
	* Additional checks for parent pages when in enterprise mode.
	* Better header support in the View API.
	* New File API method, sentToUserAgent().
	-- Charlie Powell <charlie@eval.bz>  Sat, 22 Mar 2014 14:47:15 -0400

Core Plus 3.0.0

	* [Bug] #436: Widgets do not display when added to a non-default site skin.
	* [Bug] Fix the admin bar hiding error on Safari and some versions of Chrome.
	* [Bug] Maintain the option to upgrade invalid components in the updater.
	* [Bug] a DEVELOPMENT_MODE check was a little too greedy for invalid components.
	* [Bug] Need to ensure that exceptions are preserved for false mastertemplates.
	* [Feature] #541: Log Rotate for /logs
	* [Feature] #545: System Log Viewer
	* [Feature] Improved installer
	* Components can now autoload their own classes before the component is fully installed.
	-- Charlie Powell <charlie@eval.bz>  Thu, 02 Jan 2014 15:00:14 -0500

Core Plus 2.8.0

	* [Bug] Radios and checkboxes duplicated the element ID in the markup.
	* [Bug] Ignore the HTTP_USER_AGENT key of the SERVER variable if it's not present, (CLI mode).
	* [Bug] Better handle new Firefox useragents on Linux in Core.
	* [Bug] Handle the Model::ATT_TYPE_DELETED flag correctly in the schema handling.
	* [Bug] Better handle the order of form element attributes and their defaults.
	* [Bug] Correctly ignore blank sub whereclauses instead of rendering as "( )".
	* [Feature] New features supported in the link system.
	* [Feature] Handling non-existent admin pages and an interface for the new model sync.
	* [Feature] Add SUDO support in Core.
	* [Feature] Sessions support external data.
	* [Feature] New support for searchable models and dynamic columns.
	* [Feature] Add support for individual smarty plugins to be registered in the component xml.
	* [Feature] Core search indexing system for models using the DoubleMetaPhone technique.
	* [Feature] Support shorthand arguments on smarty custom functions instead of just throwing an
	  exception.
	* [Feature] FormDateTime objects support a "savetimezome" attribute.
	* [Feature] Add a building placeholder icon into Core.
	* [Feature] Better support for automatic breadcrumbs.
	* [Feature] Form elements can be marked as not persistent.
	* [Feature] Component permissions now support a context attribute.
	* [Feature] User has been migrated into Core, should alleviate some weird issues during upgrades.
	* Work on code standards / review issues :)
	* Rearrange the bootstrap includes.
	* Migrate the User system into Core.
	* Switch the ViewMeta to use the 2.8.x User system.
	* Switch the FormController to use the new 2.8.x User system.
	* Fancy Game of Life 404 and 500 error pages, optimized for both full-width and standard width
	  templates

Core Plus 2.7.0

	* [Security] Tack on details for errors and security notices in log files.
	* [Security] Fix Prevent the installer from being executed after the site has been installed.
	* [Security] New Core model - SystemLogModel; provides an interface for standard logging for errors,
	  security, and informative reports.
	* [Bug] Fix on the filestore factory for when the root_url_nossl is "/" and the file passed in starts
	  with a "/".
	* [Bug] Fix the ROOT_PDIR directory resolution on symlinked directories.
	* [Bug] Fix a bug where directory creation was not respecting DEFAULT_DIRECTORY_PERMS.
	* [Bug] Fix the smarty insertable rendering.
	* [Bug] Fix in Core just in case the user component is available but not loaded yet.
	* [Bug] Minor fix for "TRUNCATE TABLE" statements in the datamodel sql parser.
	* [Bug] Update the error management system to work better with PHPUnit tests.
	* [Bug] Properly escape indexes on the DROP INDEX instruction for table modifying.
	* [Bug] Page insertables need to be saved even with a blank value.
	* [Bug] Fix the file assets being renamed to .min.* before the location check being ran.
	* [Bug] fixed the path to the template when a fatal error is hit
	* [Performance] Optimize the bootstrap includes.
	* [Feature] Add a new feature, a simple tic-tac-toe game on the fatal error page.
	* [Feature] Add support for deleted models not really being deleted.
	* [Feature] Force all mysql transactions to be seen as UTF8 strings.
	* [Feature] Handle exceptions internally on the SystemLogModel::Log*Event methods.
	* [Feature] Set the error handler to record errors to the database instead of only to log files.
	* [Feature] Make the modify table a little more verbose on the installer and updater.
	* [Feature] Reorganize the Dataset structure.
	* [Feature] Numerous additional checks on the installer, such as mcrypt, curl, and the new log
	  directory permissions.
	* [Feature] Catch any unexpected exceptions on the installer and handle them pseudo-gracefully.
	* [Feature] Log the installs and reinstalls requested by an administrator.
	* [Feature] Install, update, reinstall, disable, and enable actions create log reports and a database
	  entry detailing the changes performed.
	* [Feature] Complement to the new SQL_Parser, a Dataset-oriented version.
	* [Feature] New utility set, ErrorManagement; provides a central location for error management and
	  reporting.
	* [Feature] New logging function, Logger\append_to(); writes to files located in src/logs/.
	* [Feature] New bundled library - Pear SQL_Parser.
	* [Feature] Update smarty to the newest upstream version.
	* [Feature] Add user's geographic data based on their IP to the bootstrap.
	* Legacy support for pre 2.7.0 components on the new Dataset structure.
	* Downstream changes from the Dataset migration.
	* Increment the minimum PHP version to 5.4 in the bootstrap.
	* Add some verbiage to the bootstrap when the site has not been installed yet.
	* The link on the installer just needs to point to the root URL, "".
	* Move the Dataset location into libs/core/dataset.
	* Update the copyright datestamp to the current year.
	* Split FormElement validation to its own method.
	* Un-escape strings that are read in from a SQL file.
	* Smarty no longer supports wrapping an object assigned to a template in quotes within the smarty tag
	* Tweak the verbiage on the core/javascript/minified option.
	* More precise targeting of correct "Model" classes in the parseDBSchema for components.
	* Improved phpdoc on CLI::PromptUser and better support for different answer types.
	* cleaned up moar documentation for constants
	-- Charlie Powell <charlie@eval.bz>  Thu, 07 Nov 2013 15:07:29 -0500

Core Plus 2.6.2

	* [Bug] Better event handler for the <a confirm="..."/> tags.
	* [Feature] Core supports feature freezing, forcing the updater to only give bug and security fixes.
	* A few more defines that may not be present in the installer.
	* Increase the secret encryption passphrase from 64 characters to 96 characters.
	* Better updater check in its widget.
	* Make sure that the admin link stays in the adminbar.
	* Dataset allows for unique() to be chained like everything else.
	* Allow "1" and "0" to be wrapped by quotes for mysqli.
	* Pages now remember the last page template used to render the page.
	* The model now knows and respects the raw datatype being stored, and uses the appropriate function
	  for comparisons.
	* New method, Email->addCustomHeader, useful for adding custom email headers.
	* Deprecate some methods in the CurrentPage object in favour of the View.
	* New function, \Core\compare_strings;  Useful for comparing values that explictly need to be seen as
	  strings.
	* Smarty templates use php's DOMDocument system for processing {insertable} tags.
	* Static asset cache is disabled as it causes inconsistent results across different themes.
	* Code cleanup - remove some unnecessary code.
	* 'class' is reserved in ie... This changes the types object parameter class to something IE won't
	  bitch about
	-- Charlie Powell <charlie@eval.bz>  Mon, 30 Sep 2013 01:03:44 -0400

Core Plus 2.6.1

	* [Security] Hide version numbers when not in development!
	* [Security] fix - Pages cannot be requested on methods that exist on the parent Controller object.
	* [Security] Add a "Security" type into the changelog system.
	* [Bug] Fix checkboxes "check/uncheck all" logic and support for multiple instances.
	* [Bug] Fix file inputs with no value selected by default, but not required.
	* [Bug] Fix the installer not being able to purge the cache.
	* [Bug] Rewrite maps correctly handle URLs with query strings attached to them.
	* [Bug] Forgot to prefix an Exception with the root namespace.
	* [Performance] Optimize the performance of Core::VersionSplit.
	* [Performance] Optimize some of the Core javascript a bit.
	* [Performance] New support for an asset version for better cache control.
	* [Performance] Optimize the admin bar logic slightly.
	* [Feature] Implement the private directory directive and backend.
	* [Feature] FilterForm supports a 'dateformat' attribute.
	* [Feature] Minify the the admin configuration page a bit more.
	* Provide some cleaner rendered source code for head and foot content.
	* Test file for the Filestore\Factory class.
	* Lessen up the constraint for the DMI_Backend interface.
	* Deprecate /core/filestore/[assetdir,publicdir,privatedir] directives.
	* A bug in the filestore caching system that caused file assets that were assumed to be already cached
	  to return as an non-existant object. Instead, it should have not returned anything
	* Switch the userconfig install directive to use the new default fields.
	* Config to FormElement is abstracted into its own function.
	* View is more self-contained and less static.
	* New methods, \Core\page_request and \Core\view.
	* Remove the /core/filestore/previews option as this is no longer used anywhere.
	* Remove an unnecessary file from a legacy naming convention.
	* Error pages are a little more professional reading.
	* Resolve Link gracefully handles controllers that cannot be resolved.
	* Need to use version_compare for the changelog sorting.
	* Group the radio options in a common div.
	* Set a few defaults for datetime type form fields.
	* DateTime form elements support displayformat and saveformat as parameters.
	* Switched the private method getEntriesSorted to public.
	* Add a getPreviousSection method on the changelog parser.
	* Standardized the order of returning changelog entries.
	* Changelog sections properly ignore duplicate entries.
	-- Charlie Powell <charlie@eval.bz>  Sat, 31 Aug 2013 17:58:54 -0400

Core Plus 2.6.0

	* [Bug] Minor bug in the updater template.  Needed to use version_compare instead of "<="
	* [Bug] The "disabled" form attribute is now better handled on both the renderer and the parser.
	* [Bug] Moved component include installation directives to a separate method so that they won't
	  interferre with the installation variables!
	* [Performance] Applied more aggressive compiling on the bootstrap.  Gives a little bit more
	  performance.
	* [Performance] Modified time is now used for local -> local file comparisons.  This is because mtime
	  is about 14-times quicker than a md5sum comparison.
	* [Performance] Boosted the caching on the UserAgent object a little.
	* [Feature] New feature - /form/savetemporary.ajax, this is a page that will save a given submitted
	  form back to the session as an auto-save feature.
	* [Feature] Added a new form element, FormPageMetaAuthor.
	* [Feature] Added a new form group: 'FormTabsGroup'.  This uses javascript to render out a tab-based
	  layout.
	* [Feature] Added support for FromGroups to be mapped via name.
	* [Feature] Implemented Feature #385 - Sanitize filenames for files uploaded
	* [Feature] checkbox groups now have a toggle all option
	* [Feature] Added a "keepdots" parameter to the str_to_url function.  Useful for filenames
	* [Feature] Major rewrite to the page form elements.  The PageModel is now responsible for all of the
	  elements rendered out.
	* [Feature] Disabling components now actually removes their user configuration options and pages from
	  the system; (enabling re-adds them back).
	* [Feature] Disabling and enabling components now register in the security log.
	* [Feature] The site is now locked automatically when the automatic reinstaller is initialized.  This
	  prevents the site from dropping into multiple reinstalls at once.
	* [Feature] FilterForm now supports "linkvalueprefix" and "linkvaluesuffix".  These get prepended and
	  appended automatically to any value; useful for datetime strings.
	* [Feature] Widget instances and Widgets now can keep track of which "installable" tag the widget was
	  called with.  This allows metadata to be passed into the widget.
	* [Feature] Added 'Performance' to the list of changelog types.
	* [Feature] BaconIpsum is now included in Core by default!
	* [Feature] Added the various Creative Commons license images and GNU license images.  These are used
	  along wtih the new metaata/media manager system.
	* [Feature] Parsed HTML now get the metadata tags for images automatically.  ie: insertables.
	* Updated the documentation on all the Form elements.
	* New method, Template::getInsertables.  This has been moved from the page element system to the
	  template system where it belongs.
	* New method, Form::addElementAfter.  This allows an element to be insert into the Form after another
	  element.  Useful for Form manipulation.
	* New method, Form::getGroup.  Will search through the element list for a given group by its name, and
	  create one if it doesn't exist.  Takes into account the Group type too.
	* New method, Form::getModels.  Just returns the unaltered models associated to a Form.
	* Form::addElement now supports the attributes "group" and "grouptype".
	* The Form system now skips automatic form handling on any /form/*.ajax page.  This allows those pages
	  to be submitted to directly to act as metafunctions for forms.
	* Models with existing data can now have a UUID column added.
	* Insertables are now better linked to the given page's site.
	* Rearranged the title and parenturl for pages.  This allows the basic information to be displayed
	  first.
	* System form elements now jsonencode their values.  Allows multi-values to be used in the unique key
	* Greatly cleaned up the fileinput javascript.  It's now actually readable.
	* FileInput now supports browsing for files on the server.  This is enabled with the form element
	  attribute "browsable".
	* Changed what the FileInput returns for its set value.  Now, instead of simply returning the basename
	  of the file, it returns the prefix "public/*" part as well.  This is to support the browseable
	  feature.
	* New form element, License Input ("license").  This display a drop-down with the various licenses
	  supported on the system.
	* PageMetaKeywords file input no longer requires a page to be attached.  This allows the same input to
	  be used for file keywords as well.
	* New metadata system for files.
	* Switched to use the cacheable version of UserAgent in the two spots that it was being called.
	  Caching on this object is extremely important because it's so heavy.
	-- Charlie Powell <charlie@eval.bz>  Sat, 20 Jul 2013 16:07:38 -0400

Core Plus 2.5.8

	* [Bug] Fixed a bug when loading a file from /tmp.  This needed to have been forced as a FileLocal
	  object despite that it may not be in the registered tmp location.  PHP File uploads for example use
	  the system-registered location.
	* [Bug] Several fixes to the system updater, particularly in regards to theme support.
	* [Feature] Added a \Core\Filestore\extension_to_mimetype function to help centralize mimetype
	  resolution for files and incoming requests.
	* [Feature] Added a javascript object Core.Browser.  This contains some information about the user
	  agent currently viewing the site.
	* [Feature] UserAgent now has a 'isMobile' method.  Simply checks if the type is "Mobile Browser".
	* [Feature] Added a skin-level variable, "body_classes".  This automatically gets the various
	  system-defined classes such as ua-is-mobile, the page id, and a few others.  In addition, the
	  bodyclasses property of the view is now accessable for custom class names.  (NOTE, you will NEED to
	  add {$body_classes} in your skin.)
	* Removed the Core.Version property in production.
	* Retooled the UserAgent system to use browscap.ini instead of the previous system.  Browscap seems to
	  be better maintained and has more uptime.
	* Improved the documentation of the Profiler class.
	* Centralized some of the logic in the Profiler class internally.  This makes the system more stable
	  and easier to maintain.
	* Modified the Core JS template function.  It now uses "[%%" and "%%]" as the prefix and suffix for
	  variables.  This removes the chance that "%" will be used inside the template body.
	-- Charlie Powell <charlie@eval.bz>  Wed, 26 Jun 2013 17:43:16 -0400

Core Plus 2.5.7

	* [Bug] Fix for bundling components that have a < 1 version.  An example of this is "r7".
	* [Bug] Component getRequires needed to return all components in lowercase.
	* [Bug] Component isLoadable needed to check if the files are loaded instead of just loaded.
	* [Bug] Component added library checks the the isLoadable check.  This was needed for components that
	  provide functionality from another component.
	* [Bug] Core can now load without the User component available.  This is a fringe case for upgrades.
	* [Bug] Prevented the admin_group page attribute from displaying on forms.
	* [Bug] Added additional logic in the admin menu to be able to render on legacy codebases without the
	  proper jquery version.
	* [Feature] Some new developer utilities, "export_dev_bundle.sh" for one.  This is a script that will
	  export the CWD as an installable bundle with all the developer utilities and un-minified components.
	* [Feature] Updated the system updater to better display components that have errors with them.
	* [Feature] Removed the execMode check on components.
	* [Feature] Created a \Core\parse_html function.  This scans for <img/> tags and replaces them with
	  server-resized versions if necessary.
	* [Feature] Added in Directory_local_backend, File_local_backend, and Template classes to support
	  legacy versions of the code.
	* [Feature] Added the ability to specify the <h /> level for the starting element of the Changelog
	  system.  Useful for creating custom changelog reports.
	* [Feature] Added a "/core/security/x-frame-options" config option for defining the X-Fame-Options
	  header.  Defaults to "SAMEORIGIN".
	* [Feature] The admin menu now responds to touch events as well as hover.
	* Moved Core::Redirect to \Core\redirect
	* Moved Core::Reload to \Core\reload
	* Moved Core::GoBack to \Core\go_back
	* Minor fixes in the Changelog system for parsing files.
	-- Charlie Powell <charlie@eval.bz>  Thu, 13 Jun 2013 17:45:25 -0400

Core Plus 2.5.6

	* [Feature] Retooled the filestore system.  It is now more self contained and has actual tests behind
	  it
	* [Feature] Added a new method for templates, hasWidgetAreas.
	* [Feature] Insertables now will parse for resized images and return the server-resized version.
	-- Charlie Powell <charlie@eval.bz>  Wed, 05 Jun 2013 17:59:50 -0400

Core Plus 2.5.5

	* [Bug] Fixed a minor glitch when /file/preview is recording its entry in the page navigation.  This
	  caused some weird redirect issues.
	* [Bug] Set /file/preview to allow reading of "asset/" files.  This is the discouraged method of
	  loading assets, but allowed.
	* [Bug] Minor bug in the HookHandler.  Did not account for type="string" returns that didn't have a
	  return value.
	* [Bug] Set the file local getFilenameHash to return a more agnostic asset path.  Now the theme name
	  is dropped as it's unnecessary.
	* [Bug] Fix in the packager to ignore filenames that end with "~".  These are backup files that are
	  not necessary.
	* [Feature] Added support for page groups under the admin menu.
	* [Feature] Set hard-mapped pages to overwrite their access strings from the component metafile upon
	  reinstallation.  This is because those pages are generally managed by the developer and not the end
	  user.
	-- Charlie Powell <charlie@eval.bz>  Mon, 20 May 2013 17:29:44 -0400

Core Plus 2.5.4

	* [Bug] Minor bug fix, components needed to include the trailing slash for getAssetDir().
	* [Bug] Models now support non-array primary keys.  This is a discouraged ability, but still a
	  supported one.
	* [Feature] Added the ability for web administrators to manage their own "custom" assets and
	  templates.  These are resources set by the developer, but editable admins.  Upon changing a file,
	  that file is copied to the "themes/custom" directory to prevent overwriting of the file upon future
	  updates.
	* [Feature] Emails can now have a skin.  This is useful for outbound communication branding.
	* [Feature] Form caches can now be purged from within a controller!
	* [Feature] New hook type - "string".  This will stop propagation immediately if a non-zero length
	  string is returned from a listener.
	* [Feature] Do not set the updated timestamp on a new model if it's already set.  This may be useful
	  for fine-tuning how the data behaves.
	* [Feature] Added a few more custom mimetypes that may be returned in Ubuntu 13.04.
	* [Feature] New reset.css and reset.min.css files available in core.  These are a combination of the
	  normalize and main html5 bootstrap files.
	* [Feature] Message icons are now a part of core instead of the default theme.
	* [Feature] Imported newest version of html5shiv into the core.
	* [Feature] Controllers can now register their view to be rendered with the "admin" mastertemplate,
	  (aka skin).  This is a shortcut to use whichever admin skin is set.
	* [Feature] Retooled the smarty {img} function to use the /file/preview controller if the file doesn't
	  exist.  This allows for non-blocking displaying of previewable assets.
	* Centralized the hash generation for forms.  This allows better support for purging a form's cache
	  from within the controller.
	* Migrated "default" theme asset files to core.  With the new structure, it doesn't make as much sense
	  to keep that as a separate directory.  These include mimetypes, placeholders, and a few other
	  images.
	* Reimplemented the file/preview controller in core.  This now supports public/ and asset/ files
	  again.
	* Increased FTP error reporting.  It now complains with the specific part that failed, (username,
	  path, etc).
	* \Core\user now retrieves from the session variable all the time.  This allows an external script,
	  (say /login), to modify the user object and make it immediately visible.
	* Completely rewrote the local file management for previewing files.  It is now broken into three
	  separate methods, (with one private helper method).  getPreviewFile(), getPreviewURL(), and
	  getQuickPreviewFile().
	-- Charlie Powell <charlie@eval.bz>  Thu, 16 May 2013 02:13:43 -0400

Core Plus 2.5.3

	* [Feature] Now supports the new admin-only skin option.
	* Minor cleanups in the controls hover menu.
	-- Charlie Powell <charlie@eval.bz>  Mon, 29 Apr 2013 14:32:34 -0400

Core Plus 2.5.2

	* [Bug] Fixed a bug that ocurred with models that start with "Model" and end with "Model".
	* [Bug] Fixed a bug on the smarty widgetarea function to translate fully resolved paths back to their
	  relative location.  Useful for matching up which page has which widget installed on it.
	* [Bug] Set the adminbar to be hidden on print by default.
	* [Feature] New hooks available - /core/model/presave and /core/model/postsave.  These are useful for
	  attaching into the model save procedure.
	* [Feature] Model->getKeySchemas and getKeySchema now have a "title" attribute for each record.  This
	  is a human-friendly name generated from either the form data or the machine name.
	* [Feature] New methods, Model->getData and getInitialData.  Useful for getting the raw data prior to
	  or post save.
	* [Feature] new method, Model->getPrimaryKeyString gets the PK values for a given record as a
	  flattened string.
	* [Feature] New support for reading CSV files.
	* [Feature] New support for the "expries" header in remote files.  If this is present and valid, no
	  server calls will even be made for a given remote file.
	* Removed the "g:admin" permission string on /admin.  This allows the dashboard page to be properly
	  used as a dashboard for any user with access to a "admin=1" page.
	* Better phpdoc for the file input form element.
	* Prettified the accept file error a little.  It now generates english-readable text instead of a
	  machine-type printout.
	-- Charlie Powell <charlie@eval.bz>  Mon, 22 Apr 2013 10:24:39 -0400

Core Plus 2.5.1

	* [Bug] Set the smarty "mail" command to require the Core mail javascript.
	* [Bug] PageModel::getResolvedURL now can render cross-site links when in enterprise/multisite mode.
	* [Bug] Make sure not to record the navigation for 404 pages.
	* [Feature] Added support for Model::ATT_TYPE_UUID_FK and Model::ATT_TYPE_ID_FK. These are currently
	  just helper constants so I don't have to remember how many characters a UUID is.
	* [Feature] New method: FilterForm::getTotalCount; just returns the total if it's set.
	* [Feature] Added support to for namespaced classes in the Core autoload system.  They are treated
	  just like any other class, as in they can be in whatever directory for a given component.  The
	  packager also correctly scans them too.
	* [Feature] Moved the changelog parsing logic into its own set of classes.  This allows the changelogs
	  to be parsed from additional scripts.
	* [Feature] Added a utilities/generate_changelog script to compile HTML versions of the changelogs on
	  the site.
	* [Feature] Changelog entries will now be organized in a particular order: bugs, features, then other.
	* [Feature] Added the changelog generation to the full build.
	* [Feature] Added additional debugging logs throughout the core code to better troubleshoot core
	  issues.
	* [Feature] New support for optional CSS files in template files.
	* Display view errors when in development mode along with their backtrace.
	* Minor fix in the {a confirm} usage; properly escaping single and double quotes now.
	* Organizing phpdoc to build better documentation.
	* Migrated Debug::Write to Core\Utilities\Logger
	* Migrated Core::*Profile to Core\Utilities\Profiler
	* Organized the core-cache logic a little in hopes of alleviating a strange bug that popped up on one
	  site.
	* Overhauled the template system entirelly.  Template is now a factory-only class and the specific
	  rendering engines are now polled automatically based on the file extension.
	* Changed the Core::GoBack method to ignore the same page that the user is currently on.  This allows
	  "1" to be used on a POST page as if it were the original page load.
	-- Charlie Powell <charlie@eval.bz>  Mon, 15 Apr 2013 15:48:05 -0400

Core Plus 2.5.0

	* [Bug] Fix in the Model system to not try to propagate keys up to the parent of a linked model.
	* [Performance] Minor performance tweaks in the PageModel.
	* [Feature] Added a new filter type, "CONTAINS".  This is useful for filter examples such as "Email
	  contains @gmail".
	* [Feature] Added some logic to gracefully handle if the export directories do not exist.
	* [Feature] Added a Core.Strings.rot13 javascript function.
	* [Feature] Added a DateTimeInput.
	* [Feature] Added support for components with a space in their filename.
	* [Feature] Added support for encrypted configuration options.
	* Tweaks to the versioning system.
	* Wrote some tests for VersionSplit and VersionCompare.
	* Components now support an auto-install mode for assets.  This only runs during development mode.
	* Changed the behaviour of filters.  They now accept "0" as a valid value and will display the filter
	  system with it if a "" value is present.  This enables filters that act on a boolean property to
	  function correctly.
	* Changed the behaviour of Form::addModel and getModel methods.  The form system now saves the model
	  in a local variable and makes that exact model available on the next pageload.
	* Removed some legacy code from the Form system pertaining to the PageModel.  That model now handles
	  the logic internally.
	* Better enforcing Model and the DMI default values.  ex: enum field types now require one of the
	  options to be set as default if null is set to false.
	* Moved the "components_load_complete" hook to be fired after the postincludes instead of before. This
	  ensures that smarty and some other systems are available.
	* Bad components don't get disabled immediately, makes development easier.
	* Packager now supports some CLI arguments for various common tasks.  Repackage component, repackage
	  theme, list components and list themes.
	* Modified the user config weight a little.  Now automatic weights are all +1000, so they will float
	  to the bottom of user-defined sorting.
	* New method, ConfigHandler::IsOverridden.  Useful in enterprise mode.
	* Heavier use of Model::translateKey throughout the system.  Helps to centralize the logic.
	* General exceptions are now caught in the view.
	* Component debug listing is now sorted alphabetically.
	* NULL is now handled more gracefully in the Model.
	* Set the install redirect to be a 302.  Should help prevent FF from redirecting endlessly on new
	  installs.
	* Upgraded phpmailer to 5.2.4
	* Using "getKeyName" for components, should fix the name/directory issues.
	* Switched the filestore directives to constants defined within the configuration.xml file. This helps
	  make the installer more user-friendly and stable.
	* Updated several core subsystems to work better when the core isn't installed yet.
	-- Charlie Powell <charlie@eval.bz>  Mon, 01 Apr 2013 20:51:54 -0400

Core Plus 2.4.6.3

	* More fixes in the updater UI.
	* New methods to get the changed files in a given component.
	* Packager now displays which component has local changes, (needs to be packaged).
	* Installer will now refuse to update a component with local changes.
	-- Charlie Powell <charlie@eval.bz>  Sun, 24 Feb 2013 15:42:08 -0500

Core Plus 2.4.6.2

	* FTP Fixes in core.
	* Installer is more efficient.
	* Component->disable now flags the component as disabled on that same pageload.
	* Core better handles upgrade errors for components.
	-- Charlie Powell <charlie@eval.bz>  Sun, 24 Feb 2013 14:14:27 -0500

Core Plus 2.4.6.1

	* Updates to the installer, primarily more verbose output and reloading the package list on a
	  successful installation via the UI.
	* Removed some legacy code from the packager.
	-- Charlie Powell <charlie@eval.bz>  Sun, 24 Feb 2013 12:53:22 -0500

Core Plus 2.4.6

	* [Bug] Fixed the smarty issue of SMARTY_DIR already being defined.
	* Minor fixes in the updater including CGI mode support and correctly handling empty "operation"
	  requests.
	* Do not try to parse userconfigs if that model doesn't exist.  Fixes user component updates.
	* Support for the new userconfig features.
	* Changed how the reload method works slightly.  It now sends a 302 header along with the location.
	* If a form action returns the same page that it is currently on, the form system will reload the page
	  instead of trying to redirect.
	-- Charlie Powell <charlie@eval.bz>  Fri, 22 Feb 2013 15:42:17 -0500

Core Plus 2.4.5

	* [Bug] Fixed support for the "class" names on form elements
	* [Bug] Fixed the <aside><aside> error.  Widgets should have been divs instead of their aside.
	* [Bug] Fixed bug #92 - Installer still runs for components if no upgrade path available.
	* [Bug] Fixed bug #253 - Disabled components cannot be re-enabled.
	* [Bug] Fixed the Directory remove statement for tmp filesystem over FTP.
	* [Bug] Fixed the File remove statement for tmp filesystem over FTP.
	* [Feature] Added a warning on the repos landing page if the gnupg directory is not writable.
	* [Feature] Added a repos_delete page.  This is kinda useful...
	* [Feature] Added some debug statements throughout the system.
	* Made the hover controls enabled by default
	* New admin hook system and dashboard, (still in beta).
	* Switched all widgets to use the "installable" flag instead of baseurl for that attribute. This just
	  helps with confusion between those two different elements.
	* Zip files that have a mimetype of application/octet-stream are now detected appropriately.
	* Removed the "enabled" flag on update sites.  If it's present in the system, it's going to be used.
	* Set the updater page to display the enabled components sorted by name.  This makes it easier to skim
	  through and see what's installed.
	* Removed repos_edit page.  There's no data to really edit.
	* Cleaned up the repo landing page and added descriptions for the repositories.
	* New 2.4 API level for repo.xml and package.xml files.
	* Repositories now support descriptions.
	* Repositories now support gpg keys embedded.  These get installed automatically upon adding the repo
	  to a site.
	* Changed how "textarea" user prompting works in CLI mode.  Now it displays the message and has the
	  user press enter to continue.  This gives the user a chance to see the message.
	* Major cleanups to the component package logic.
	* Core API 2.4 is now a recognized API version for components.
	* The packager now writes at API level 2.4.
	* PageRequest method getPost now accepts POST data that is nested by one-level, ie: "model[id]" is now
	  supported.
	* XMLLoader now supports a schema for XML files.  This is useful in assigning a DTD schema source
	  automatically.
	* FileContentFactory now works [better] if Core isn't loaded.
	* Overhauled the create_repo script to be a little more user friendly and to work with the new repo
	  features.
	* Overhauled the update backend and UI.  This now behaves more closely to how the WHM updater looks.
	* Cleaned up the Hook system a little; it now complains if you try to register two hooks with the same
	  name.
	* Admin dashboard widgets now get installed to the dashboard automatically, (they can later be removed
	  if desired).
	* Core::CheckClass no longer tries to load itself recursively.....  I'm not sure what I was smoking
	  when I put those lines in :/
	* Core::GetComponent now will retrieve a disabled component if called by name.
	* New shortcut method, CoreDateTime::Now().  This gets the time "now".
	* Debug::Write now formats the messages using <pre> tags.
	* File copies now throw Exceptions.
	* The GPG key of a given package is now listed in the repo.xml file.
	-- Charlie Powell <charlie@eval.bz>  Wed, 20 Feb 2013 17:56:08 -0500

Core Plus 2.4.4

	* [Feature] Added support for UUID column types in models.  These are treated exactly the same as IDs,
	  but their values are generated via Core instead of the underlying database system and they are
	  supported in multi-server modes.
	* [Feature] Added support for "selectable" as an attribute on the <page> directive in component.xml
	  files.
	* [Feature] Added support for UUID based model columns in the form system.  They are respected the
	  same as IDs.
	* [Feature] Added support for Date based model columns in the form system.
	* Set the packager to allow whitespace before the class declaration.
	* New form element: date input.  This uses jqueryui to render a datepicker on the form element.
	* Some fixes for user permissions in multisite mode.  The permission cache is now cleared on page load
	  when multisite is enabled.
	* Updated many of the form element styles.
	* Minor fix in the packager for CHANGELOG management.
	-- Charlie Powell <charlie@eval.bz>  Sat, 09 Feb 2013 23:36:50 -0500

Core Plus 2.4.3

	* [Bug] Fix in Core::CheckClass for when the file containing a given class is not found. Now an
	  exception is thrown.
	* [Feature] Added pageviews into the core page system.  This is a counter that is incremented every
	  time a page is viewed if that page exists in the page table.
	* [Feature] Added an X-FRAME-OPTIONS header of SAMEORIGIN.  This is a security fix.
	* [Feature] Added support for IN where statements.
	* New method, Core::GetHistory.  This behaves the same as GoBack, except that it simply returns the
	  url instead of redirecting.
	* Ajax and JSON pages no longer record navigation.
	* Force displaying of all errors if in development mode.
	-- Charlie Powell <charlie@eval.bz>  Mon, 04 Feb 2013 15:29:17 -0500

Core Plus 2.4.2

	* [Feature] Added a "getControls" method onto the Controller.  This allows controls for an entire
	  controller to be shared and set in one location.
	* [Feature] Added a method Core::GenerateUUID to generate a globally unique ID in the format of
	  "1-c5dbcaaf9db-8d77".  The first digit is the site id, (more on that in a later version), the next
	  snippet is the timestamp, and the last is a random set of digits.
	* [Feature] Added setting functionality on the widget system.  This allows for a custom Widget to have
	  minor settings stored along with the widget definition itself.
	* Reduced the size of the page_meta::meta_value attribute slightly, was causing some mysql servers to
	  complain about the key size.
	* Some minor fixes and tweaks on the admin config when dealing with multisite modes.
	* Switched the PageMetas getValue method to return an array of element values instead of a json
	  string.
	* MAJOR API CHANGE: Moved the automatic processing of models, assets and other files to before the
	  <upgrade> tasks.  This means that the database will be at the version of the code regardless of
	  which version it's upgrading from.
	* Forcing the save of session data prior to reloading and redirecting. This should resolve some weird
	  quirks.
	* New method, Session::ForceSave.  This will write the current $_SESSION data back to the datastore.
	* Updated the packager to wordwrap lines to stay within 100 characters. Also improved the formatting a
	  little.
	* Set the shorthand version of addControl to allow to use custom icons.
	* Set the ViewControl system to ignore controls that link to the current page.  These are redundant to
	  display to the user.
	* Switched the ViewControl behaviour to use hover context menus by default.
	-- Charlie Powell <charlie@eval.bz>  Fri, 01 Feb 2013 18:59:24 -0500

Core Plus 2.4.1

	* [Bug] Fixed bug with themes not reinstalling as expected.
	* [Feature] Added form controller methods for several elements, including alternate page templates,
	  user metatag autocompete, and keyword metatag autocomplete.
	* [Feature] Added support for <upgrade> directives to contain a <phpfileinclude> tag.  This file gets
	  executed automatically upon the appropriate upgrade.  This allows for very fine grain upgrade logic
	  such as data manipulations and whatnot.
	* [Feature] Added support for readonly filters.  These are useful for print views.
	* [Feature] Added a new method, Model::getLinkFactory.  Allows for fine grain control of linked model
	  factories.
	* [Feature] Added a unique flag to the Dataset object, allows for use of the mysql DISTINCT flag.
	* [Feature] Added a new class, DatasetStream.  This buffers results from a dataset select statement so
	  as to not use too much memory on massive queries.
	* Moved the description field to above the input on standard form elements.
	* Better error reporting on the View.
	* Load blank meta data from the page object if provided in FormPageMetas.
	* New method, Core::CompareValues.  Provides more useful variable comparisons in forms.
	* New Filter option, linkname.  Allows the model key to be defined separately from the element name.
	* Updated the session system to make use of 5.4 systems.  This should clear up any weird issues with
	  sessions.
	* Incremented the minimum php version from 5.3.x to 5.4.x.
	* Support for alternate page templates is now working better!
	* Huge redux on how the page meta system operates and stores data.  Each key for each page is now
	  stored individually in the page_meta table.  This allows for lookups of this metadata and for more
	  functionality of the tags.
	* Scaffolding support for site-wide tag systems via the new metadata system.
	* Minor updates throughout the core and page request system to better support CLI testing.
	* Forms now support multiple models being added to it via Form::addModel.
	* Form groups now have a getID() method.  Acts the same as the getID method from FormElement.
	* New FormElement method, getValueTitle.  Gets the title of the currently selected option, if any.
	* Dropped the property Model::$_dirty in favor of the new Model::changed() method.  This actively
	  checks the data for changes.
	* New methods, Model::setToFormElement.
	* New method, Model::addToFormPost.
	-- Charlie Powell <charlie@eval.bz>  23 Jan 2013

Core Plus 2.4.0

	* [Bug] Fixed some View logic to properly replace tags in the rendering now instead of duplicating the
	  replacements.
	* [Bug] Fixed `key` = NULL and `key` != NULL statements in the mysqli backend.  These are now replaced
	  with IS and IS NOT.
	* [Feature] Added support for hooks to have a return type attached to them.  This allows different
	  hooks to return arrays or return statuses.
	* [Feature] Added a ViewControls object, which is responsible for handling the <ul/> group of control
	  links for a given object.
	* [Feature] Added the docs into the upstream codebase for easier maintenance.
	* [Feature] Added a smarty "controls" function meant for displaying the control links of a given
	  subject.
	* [Feature] Added the Dataset mode "Alter".  Useful for structural changes to the datastore.
	* [Feature] Added the alter command "rename" to the dataset.  This allows for columns to be renamed
	  pragmatically.
	* [Feature] Added ModelSchema, ModelSchemaColumn, MySQLi_Schema, and MySQLi_Schema_Column objects.
	  These help break apart the different components of the mysqli backend and greatly simplified some of
	  its logic.
	* [Feature] Added an XMLLoader::loadFromString method, allows XML data to be loaded from a string
	  representation of it.
	* [Feature] Added "getExtension" method in Directory_local_backend to provide better compatibility
	  with the File backend.
	* [Feature] Added logging for mimetype icons that don't exist on the system yet, (for DEVELOPMENT_MODE
	  only).
	* [Feature] #223 - Historical Permalink lookup.  URLs can now be changed onthefly, and any requests to
	  the old url will automatically be redirected to the new page with a 301.
	* [Feature] Added redirect status option to Core::Redirect.  It defaults to a 302, but can be set to a
	  permanent redirect instead.
	* [Feature] Added support for page resolution requests to start with a '?'.
	* [Feature] Added scaffolding support for multisite mode.
	* [Feature] Added logic to check for a valid upgrade path in components prior to executing any of its
	  upgrade logic.
	* [Feature] Added support for the model to be "loaded" without all primary keys set.
	* [Feature] Added a "SESSION_COOKIE_DOMAIN" configuration define, allows the site domain to be set for
	  cookies.
	* [Feature] Added a "findByField" method on the DatasetWhere object.  Allows for searching of a
	  specific key in the where clause.
	* [Feature] Added a modify method on the CoreDateTime object.
	* [Feature] Added a zip contents object.
	* [Feature] Added an ajaxlink javascript method.  Allows any "ajax-link" classed link to open in a
	  jquery window.
	* [Feature] Added a Core.Request javascript object to help with manipulation of the GET parameters.
	* [Feature] Added sort and pagination ability to the Filter system.
	* [Feature] Added context menus for controls.  These by default are hover based via the class
	  "controls-hover".
	* [Feature] Added hovercontext support to the ViewControl object.
	* [Feature] Added a addWhereParts method to the DatasetWhereClause object.  Allows for adding of
	  single where statements.
	* Rewrote the createTable and modifyTable methods of the mysqli backend to make use of the new
	  ModelSchema system. This has optimized the reinstall logic by scanning the tables before attempting
	  modifications, the number of write statements is drastically lower.
	* Set the CoreDateTime object to default to "now" if no date is given on construction.
	* Cleaned up the XMLLoader a little and added inline documentation on the rest of its methods.
	* Greatly optimized the copyFrom logic on local files.  Now instead of reading the entire file in
	  memory, only up to 10MB of a file is read/written at a time.
	* Set the getPreviewURL method to skip processing if the execution time is within 5 seconds of
	  timeout.
	* Updated some documentation.
	* Form elements now get 'required="required"' or 'checked="checked"' regardless if the value is set to
	  true or "1".
	* Reimplemented the meta tags.  They're now more expandable by external components.
	* Set maxlength as a valid attribute on text inputs.
	* Set maxlength as one of the attributes passed from the Model to the Form on BuildFromModel.
	* Changed the Template object to no longer extend Smarty.  This allows for a more specialized control
	  of it and cleared up a STRICT warning in php 5.4.
	* Updated the config controller a little.
	* Rewrote the ConfigHandler internal logic.  This is now a little easier to follow what it's doing.
	* Updated the ModelFactory to make use of the native ReflectionClass class.  Allows for more control
	  over instantiating of objects.
	* Reorganized the config.xml example to make it easier to set initially.
	* Reorganized some of the core hook names.
	* Removed some legacy code.
	* Model _saveExisting can now be called from extending Models.  This is useful for those models that
	  need to have more control over the save procedure.
	* Expanded the Directory ls command to allow searching for specific extensions.
	* Updated the SessionModel save logic to perform an INSERT_OR_UPDATE on save.  Should fix the race
	  condition.
	* Starting to add support for specific target widgets.  These will be targetable for areas such as
	  /admin and user profiles.
	-- Charlie Powell <charlie@eval.bz>  30 Dec 2012

Core Plus 2.3.2

	* [Bug] Fixed the FormPageMeta form for page template lookup.  It was trying to use directories as
	  files.
	* [Bug] Fixed the PageModel being set from a pageMetas object.  The meta tags were not coming over
	  correctly because the name was changed slightly.
	* [Bug] Fixed the input value being terminated after double quotes.  Resolution was replace the '/"'
	  with '&quot;'.
	* [Feature] Added FilterForm system; allows for filters to be created and utilized.
	* [Feature] Added a resetLink method in the Model.  Useful for deleting a child and not wanting them
	  to come back as linked.
	* [Feature] Added the input ID as the containing div's class name on formcheckboxesinput.
	* [Feature] Updated the title/seotitle feature (Feature #194) to make use of a dedicated variable.
	* Set the FormPageParentSelectInput value to be strtolower all the time.  Should fix many of the
	  baseurl and parenturl issues.
	* Updated the compiler to set only the relative path for the comments instead of the full path.
	* Switched the updater listing from NUMERIC sort to NATURAL sort.  This fixes the order of versions.
	-- Charlie Powell <charlie@eval.bz>  16 Nov 2012

Core Plus 2.3.1

	* [Bug] Fixed a bug with the parent page selection not selecting the correct parent page.
	* Updated the core.strings.js a little to prevent URLs from being crafted with two slashes next to
	  each other.
	* Updated the smarty a block to ignore blank confirm requests.
	-- Charlie Powell <charlie@eval.bz>  5 Nov 2012

Core Plus 2.3.0

	* [Bug] Fixed a recursion bug with local files for if the file and mimetype icon are both unavailable.
	* [Performance] Optimized some system performance a little.
	* [Feature] Added a reset input element to the form system.
	* [Feature] Added a "setLink" method to models, useful for HAS../BELONGSTO relationships.
	* [Feature] Added a new "setFromForm" method on models.  Allows for more fine-tune control over the
	  form/model interaction in controllers.
	* [Feature] Added some inline documentation to the Dataset system.
	* [Feature] Implemented Feature #194, SEO friendly title tag system.
	* Major change in the dataset WHERE structure.  Where statements now support nested clauses, each with
	  their own separator and children.
	* Removed some debug content in the core.
	* Implemented the "getHash" method on remote files.
	* Improved logic in the smarty date function for invalid data being passed in.  Now an error is only
	  thrown if the site is in development mode, otherwise simply a blank string is returned.
	* Switched default SSL mode from ONDEMAND to DISABLED in the configuration example file.
	* Reorganized the page edit form a little and wrapped the SEO options in a common fieldset.
	* Started to implement the new page_template system (partial support in place).
	-- Charlie Powell <charlie@eval.bz>  5 Nov 2012

Core Plus 2.2.6

	* [Bug] Fixed the navigation history in Core+.  Now saves the last 5 GET requests in history.
	* [Bug] Fixed the "GoBack" function of Core.
	* [Feature] Added a "isGet" method on the current page request.
	* [Feature] Added a "record" property onto the View.  Useful for indicating that certain pages
	  shouldn't be recorded by analytical tools.
	* Updated some documentation.
	-- Charlie Powell <charlie@eval.bz>  22 Oct 2012

Core Plus 2.2.5

	* [Bug] #173 - Minor tweak in the file preview system to strip spaces from the filenames.
	* [Bug] Fixed a major bug in the core component loader.  Installed components were being listed as
	  being loaded and activated before they were technically available.
	* [Feature] Added logic to prevent URLs with a '#' in them.
	* [Feature] Added a new class to handle datetimes, CoreDateTime.  This has better support for non-GMT
	  unix timestamps by using the DateTime object more directly.  (Legacy Time class was based on php <
	  5.2 logic.)
	* [Feature] Added support for custom user config validation.
	* [Feature] Added "Registered Hooks" in the debug information at the bottom of the page.
	* [Feature] Added support for resizing images with different rules, ie: fill mode or ignore aspect
	  ratio.
	* [Feature] Added a getRequest function for widgets.  Useful for getting the calling parameters.
	* Updated how widget parameters can be passed in.  Now smarty-style parameters are supports with the
	  {widget} function.
	-- Charlie Powell <charlie@eval.bz>  21 Oct 2012

Core Plus 2.2.4

	* [Bug] Fixed a bug on the page URL validation for the home page
	* [Bug] Fixed the file local backend to better handle duplicate filenames.  It will now check the hash
	  of each (#) file it finds instead of just skipping to the end of the line.
	* Removed an unnecessary directory from the root.
	-- Charlie Powell <charlie@eval.bz>  15 Oct 2012

Core Plus 2.2.3

	* [Bug] Fixed Bug #146: URL conflicts
	* [Bug] Fixed Bug #156: Installer does not complete in non-development mode
	* [Bug] Fixed Bug #115: Auto-installer does not handle models
	* [Feature] Added more files into the compiled bootstrap
	* [Feature] Added an included files section in the debug info
	* [Feature] Added new core hook, "/core/page/rendering"
	-- Charlie Powell <charlie@eval.bz>  14 Oct 2012

Core Plus 2.2.2

	* [Bug] Fixed the installer, it now handles enabling packages correctly.
	* [Bug] Fixed some other little bugs.
	-- Charlie Powell <charlie@eval.bz>  8 Oct 2012

Core Plus 2.2.1

	* [Bug] Fixed the SSL implementation
	* [Bug] Fixed the file upload input if only one option is present
	* [Bug] Fixes in the {img} tag for when the src is set but not available.
	* [Bug] Fix in the form system, added the autocomplete argument to parse correctly and a new getID
	  method.
	* [Bug] Fix in the model system to add support for models that are extended by other classes.
	* [Feature] Added javascript library for base64 operations
	* [Feature] Added a new utility, create_component.  This will create the skeleton structure of a new
	  component.
	* [Feature] Added html5shiv, the successor to the html5ie project.
	* [Feature] Added element IDs as a class name of the containing wrapper, allows for easier styling.
	* [Feature] Added a User object in the javascript api to make some basic user information visible in
	  javascript applications.
	* Styling tweaks
	* Switched the changelog to the new standard format
	* Updated the email system a little, it now sets the "Sender" and "X-Content-Encoded-By" headers.
	* Set the debug info to be hidden in print views.
	-- Charlie Powell <charlie@eval.bz>  3 Oct 2012

Core Plus 2.2.0

	-- Charlie Powell <charlie@eval.bz>  20 Sep 2012

Core Plus 0.1.0

	* Implementing better support for Debian-style version strings.
	* new {css} smarty block.
	* CurrentPage now supports inline styles to be added to the head.
	* Other minor fixes.

Core Plus 0.0.9

	* In the process of switching to AGPL.
	* Moved the theme systems into its own component.
	-- Charlie Powell <charlie@eval.bz>  Sat, 19 Nov 2011 03:12:23 +0000

Core Plus 0.0.8

	-- Charlie Powell <charlie@eval.bz>  Fri, 04 Nov 2011 05:51:11 +0000

Core Plus 0.0.7

	* Major work on the system updater, it now fundamentally works at least!
	-- Charlie Powell <charlie@eval.bz>  Wed, 02 Nov 2011 01:21:43 -0400

Core Plus 0.0.6

	* Did some fixes to the email system, it now actually works.
	* Considerable work on improving the Model validation system.  It now actually works.
	* Minor tweak in the Form validation logic, it now just shows the validation check in the error
	  message if the site is in development mode.
	-- Charlie Powell <charlie@eval.bz>  Tue, 11 Oct 2011 19:47:58 -0400

Core Plus 0.0.5

	* Updates to the stylesheet and the admin config system.
	-- Charlie Powell <charlie@eval.bz>  Sun, 18 Sep 2011 22:19:37 -0400

Core Plus 0.0.4

	* Adding phpMailer and the Email functionality back into the core.
	* Minor change to configuration options and how they're stored in the database.
	-- Charlie Powell <charlie@eval.bz>  Tue, 16 Aug 2011 23:47:36 -0400

Core Plus 0.0.3

	* More work completed on the user component (not included in core), and the widget system (included).
	-- Charlie Powell <charlie@eval.bz>  Tue, 16 Aug 2011 23:31:44 -0400

Core Plus 0.0.2-2

	* New cachecore method, flush().  This is useful in reinstalling all components and ensuring that
	  there are no lingering artifacts.
	-- Charlie Powell <charlie@eval.bz>  Mon, 15 Aug 2011 17:24:19 -0400

Core Plus 0.0.2-1

	* Removing some unnecessary components, namely the adodb5 library and the old version of the Form
	  system.
	* Did some updates to the phpass library.
	-- Charlie Powell <charlie@eval.bz>  Sun, 24 Jul 2011 21:11:35 -0400

Core Plus 0.0.2

	* MAJOR changes, first re-release since the system switched from DAO to AR.  Includes a lot of other
	  fixes too.
	-- Charlie Powell <charlie@eval.bz>  Tue, 21 Jun 2011 23:02:02 -0400

Core Plus 0.0.1-dev1

	-- Charlie Powell <charlie@eval.bz>  Sun, 22 May 2011 02:00:52 -0400

